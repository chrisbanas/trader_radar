/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_treemap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/treemap */ \"./src/scripts/treemap.js\");\n/* harmony import */ var _scripts_ticker_tape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/ticker_tape */ \"./src/scripts/ticker_tape.js\");\n/* harmony import */ var _scripts_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/time */ \"./src/scripts/time.js\");\n/* harmony import */ var _scripts_title__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/title */ \"./src/scripts/title.js\");\n/* harmony import */ var _scripts_searchbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/searchbar */ \"./src/scripts/searchbar.js\");\n\n(0,_scripts_treemap__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n(0,_scripts_ticker_tape__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n\n(0,_scripts_time__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n\n// Update the time every second\nsetInterval(_scripts_time__WEBPACK_IMPORTED_MODULE_2__[\"default\"], 1000);\n\n(0,_scripts_title__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n\ndocument.getElementById(\"search\").addEventListener(\"click\", function (event) {\n  (0,_scripts_searchbar__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(event);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQzVDQSw0REFBVyxFQUFFO0FBRWtDO0FBQy9DQyxnRUFBVSxFQUFFO0FBRTRCO0FBQ3hDQyx5REFBVSxFQUFFOztBQUVaO0FBQ0FDLFdBQVcsQ0FBQ0QscURBQVUsRUFBRSxJQUFJLENBQUM7QUFFYTtBQUMxQ0UsMERBQVcsRUFBRTtBQUVnQztBQUM3Q0UsUUFBUSxDQUFDQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFVQyxLQUFLLEVBQUU7RUFDekVKLDhEQUFVLENBQUNJLEtBQUssQ0FBQztBQUNyQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9ja19oZWF0X21hcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtYWluVHJlZW1hcCBmcm9tIFwiLi9zY3JpcHRzL3RyZWVtYXBcIjtcbm1haW5UcmVlbWFwKClcblxuaW1wb3J0IG1haW5UaWNrZXIgZnJvbSBcIi4vc2NyaXB0cy90aWNrZXJfdGFwZVwiO1xubWFpblRpY2tlcigpXG5cbmltcG9ydCB1cGRhdGVUaW1lIGZyb20gXCIuL3NjcmlwdHMvdGltZVwiO1xudXBkYXRlVGltZSgpXG5cbi8vIFVwZGF0ZSB0aGUgdGltZSBldmVyeSBzZWNvbmRcbnNldEludGVydmFsKHVwZGF0ZVRpbWUsIDEwMDApO1xuXG5pbXBvcnQgdXBkYXRlVGl0bGUgZnJvbSBcIi4vc2NyaXB0cy90aXRsZVwiO1xudXBkYXRlVGl0bGUoKVxuXG5pbXBvcnQgbWFpblNlYXJjaCBmcm9tIFwiLi9zY3JpcHRzL3NlYXJjaGJhclwiO1xuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIG1haW5TZWFyY2goZXZlbnQpO1xufSk7XG4iXSwibmFtZXMiOlsibWFpblRyZWVtYXAiLCJtYWluVGlja2VyIiwidXBkYXRlVGltZSIsInNldEludGVydmFsIiwidXBkYXRlVGl0bGUiLCJtYWluU2VhcmNoIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/searchbar.js":
/*!**********************************!*\
  !*** ./src/scripts/searchbar.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mainSearch; }\n/* harmony export */ });\nconst apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\n// const form = document.querySelector('form');\nconst input = document.querySelector('#input');\nconst clearButton = document.querySelector('#clear-button');\n\n// Add a click event listener to the clear button\nclearButton.addEventListener('click', function () {\n  input.value = ''; // Clear the input value\n  // clear out the search\n  document.getElementById(\"search-results\").style.display = \"none\";\n  // redisplay the treemap\n  document.getElementById(\"filters\").style.display = \"flex\";\n  document.getElementById(\"description\").style.display = \"flex\";\n  document.getElementById(\"treemapcanvas\").style.display = \"flex\";\n});\nasync function mainSearch(searchHit) {\n  searchHit.preventDefault(); // this is needed to prevent unwanted search\n\n  // get search query\n  const searchQuery = document.getElementById(\"input\").value;\n\n  // perform search and get company data\n  const companyData = await performSearch(searchQuery);\n  const news = await getStockNews(searchQuery);\n  const limitedNews = news.slice(0, 5);\n\n  // fetch chart data check to see if there is already a chart if so clear then redisplay\n  const chartElement = document.getElementById(\"candle-chart\");\n  const historicalPrice = await getHistoricalPrice(searchQuery);\n  if (chartElement) {\n    chartElement.remove();\n  }\n  drawCandlestickChart(historicalPrice.historical);\n\n  // clear out other elements on page\n  document.getElementById(\"filters\").style.display = \"none\";\n  document.getElementById(\"description\").style.display = \"none\";\n  document.getElementById(\"treemapcanvas\").style.display = \"none\";\n\n  // redisplay search\n  document.getElementById(\"search-results\").style.display = \"flex\";\n\n  // update search company data container with search results\n  const searchCompanyDataContainer = document.getElementById(\"search-results\");\n  searchCompanyDataContainer.innerHTML = \"\";\n  if (companyData.length === 0) {\n    // display message if no company data found\n    searchCompanyDataContainer.innerHTML = \"<p class='no-results'>No results found.</p>\";\n  } else {\n    // display company data\n    const companyDataList = document.createElement(\"ul\");\n    companyDataList.classList.add(\"results-list\");\n\n    // Inside the news\n    const listItem = document.createElement(\"li\");\n    listItem.classList.add(\"result-item\");\n\n    // create logo and name element and style the div container\n    const logoAndName = document.createElement(\"div\");\n    logoAndName.style.display = \"flex\";\n    logoAndName.style.alignItems = \"center\";\n    logoAndName.style.justifyContent = \"center\";\n    logoAndName.style.padding = \"20px\";\n\n    // stule the company image\n    const logo = document.createElement(\"img\");\n    logo.style.marginRight = \"30px\";\n\n    // style the company name\n    const name = document.createElement(\"a\");\n    name.style.fontSize = \"20px\";\n    name.style.fontFamily = \"'Roboto Slab', serif\";\n    name.style.fontWeight = \"bold\";\n    name.style.marginRight = \"2px\";\n\n    // adding and appending html elements around the page for company profile\n    logoAndName.classList.add(\"logo-and-name\");\n    logo.src = companyData[0].image;\n    logo.classList.add(\"logo\");\n    name.href = companyData[0].website;\n    name.textContent = companyData[0].companyName;\n    name.classList.add(\"name\");\n    logoAndName.appendChild(logo);\n    logoAndName.appendChild(name);\n    listItem.appendChild(logoAndName);\n\n    // create price and style\n    const price = document.createElement(\"div\");\n\n    // get the price change from yesterday\n    const priceChange = companyData[0].price - historicalPrice.historical[0].open;\n\n    // adding and appending the price html elements on the page\n    price.textContent = \"$\" + companyData[0].price;\n    price.classList.add(\"price\");\n\n    // add the up or down class based on price change\n    if (priceChange < 0) {\n      price.style.color = \"red\";\n    } else if (priceChange >= 0) {\n      price.style.color = \"green\";\n    }\n    listItem.appendChild(price);\n    companyDataList.appendChild(listItem);\n\n    // add news and style\n    const newsList = document.createElement(\"ul\");\n    newsList.style.fontFamily = \"'Roboto Slab', serif\";\n    newsList.style.fontWeight = \"bold\";\n    newsList.style.display = \"flex\";\n    newsList.style.alignItems = \"center\";\n    newsList.style.justifyContent = \"space-between\";\n    newsList.style.fontSize = \"15px\";\n    newsList.style.padding = \"20px\";\n    newsList.style.paddingRight = \"30px\";\n    newsList.style.paddingLeft = \"30px\";\n\n    // how the news list items are mapped and added to the HTML of the page\n    newsList.classList.add(\"news-list\");\n    for (const article of limitedNews) {\n      const newsItem = document.createElement(\"li\");\n      newsItem.classList.add(\"news-item\");\n      const title = document.createElement(\"a\");\n      title.href = article.url;\n      title.textContent = article.title;\n      title.classList.add(\"news-title\");\n      const summary = document.createElement(\"p\");\n      summary.textContent = article.text;\n      summary.classList.add(\"news-summary\");\n      const date = document.createElement(\"p\");\n      date.textContent = article.publishedDate.slice(0, 10);\n      date.classList.add(\"news-date\");\n      newsItem.appendChild(title);\n      newsItem.appendChild(summary);\n      newsItem.appendChild(date);\n      newsList.appendChild(newsItem);\n\n      // news item styles\n      // title.classList.style.marginBottom = \"10px\"\n      // newsList.style.marginRight = \"10px\"\n    }\n\n    listItem.appendChild(newsList);\n    companyDataList.appendChild(listItem);\n    searchCompanyDataContainer.appendChild(companyDataList);\n  }\n}\n\n// ------------------------------------------------------------------------------------------------------\n\n// Pull the company profile data\nasync function performSearch(searchTerm) {\n  const apiUrl = `https://financialmodelingprep.com/api/v3/profile/${searchTerm}?apikey=${apiKey}`;\n  return await fetch(apiUrl).then(response => response.json()).then(data => {\n    const searchResults = JSON.stringify(data);\n    const searchResultsObj = JSON.parse(searchResults);\n    return searchResultsObj;\n  }).catch(error => {\n    console.error(error);\n    return error;\n  });\n}\n\n// Pull the company news data\nasync function getStockNews(tickers) {\n  const apiUrl = `https://financialmodelingprep.com/api/v3/stock_news?tickers=${tickers}&apikey=${apiKey}`;\n  return await fetch(apiUrl).then(response => response.json()).then(data => {\n    const searchResults = JSON.stringify(data);\n    const searchResultsObj = JSON.parse(searchResults);\n    return searchResultsObj;\n  }).catch(error => {\n    console.error(error);\n    return error;\n  });\n  ;\n}\n\n// get historical price for chart. Timeseries is for how many days we want to return\nasync function getHistoricalPrice(tickers) {\n  const apiUrl = `https://financialmodelingprep.com/api/v3/historical-price-full/${tickers}?timeseries=180&apikey=${apiKey}`;\n  return await fetch(apiUrl).then(response => response.json()).then(data => {\n    const searchResults = JSON.stringify(data);\n    const searchResultsObj = JSON.parse(searchResults);\n    return searchResultsObj;\n  }).catch(error => {\n    console.error(error);\n    return error;\n  });\n  ;\n}\n\n// ------------------------------------------------------------------------------------------------------\n\n// draw the chart\nfunction drawCandlestickChart(data) {\n  // set the dimensions and margins of the graph\n  const margin = {\n    top: 65,\n    right: 20,\n    bottom: 90,\n    left: 100\n  };\n  const width = 1500 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  // set the ranges\n  const x = d3.scaleBand().range([0, width]).padding(0.2);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  // create the svg element\n  const svg = d3.select(\"body\").append(\"svg\").attr(\"id\", \"candle-chart\") // Add the id attribute\n  .attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).style(\"background-color\", \"#f5f5f5\").append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // add horizontal gridlines\n  svg.append(\"g\").attr(\"class\", \"grid\").call(d3.axisLeft(y).tickSize(-width).tickFormat(\"\"));\n\n  // add vertical gridlines\n  svg.append(\"g\").attr(\"class\", \"grid\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickSize(-height).tickFormat(\"\"));\n\n  // format the data\n  data.forEach(function (stock) {\n    stock.date = `${new Date(stock.date).getMonth() + 1}/${new Date(stock.date).getDate()}`;\n    stock.open = +stock.open;\n    stock.high = +stock.high;\n    stock.low = +stock.low;\n    stock.close = +stock.close;\n  });\n\n  // reverse the order of the data array so it charts oldest on x0 and newest on x1\n  data.reverse();\n\n  // set the domains\n  x.domain(data.map(function (stock) {\n    return stock.date;\n  }));\n  y.domain([d3.min(data, function (stock) {\n    return stock.low;\n  }), d3.max(data, function (stock) {\n    return stock.high;\n  })]);\n\n  // draw the custom x axis with labels for every 30 days\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).tickValues(x.domain().filter(function (date, day) {\n    return day % 30 === 0;\n  }))).selectAll(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", -9).attr(\"y\", 0).style(\"text-anchor\", \"end\");\n\n  // draw the x-axis label\n  svg.append(\"text\").attr(\"class\", \"x-axis-label\").attr(\"x\", width / 2).attr(\"y\", height + margin.bottom / 2).style(\"text-anchor\", \"middle\").text(\"Date\");\n\n  // draw the y axis\n  svg.append(\"g\").call(d3.axisLeft(y));\n\n  // draw the y-axis label\n  svg.append(\"text\").attr(\"class\", \"y-axis-label\").attr(\"x\", -height / 2).attr(\"y\", -margin.left / 2).attr(\"transform\", \"rotate(-90)\").style(\"text-anchor\", \"middle\").text(\"Price\");\n\n  // draw the candlesticks\n  svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", function (stock) {\n    return x(stock.date);\n  }).attr(\"y\", function (stock) {\n    return y(Math.max(stock.open, stock.close));\n  }).attr(\"width\", x.bandwidth()).attr(\"height\", function (stock) {\n    return y(Math.min(stock.open, stock.close)) - y(Math.max(stock.open, stock.close));\n  }).attr(\"fill\", function (stock) {\n    return stock.open > stock.close ? \"red\" : \"green\";\n  });\n\n  // add chart subtitle\n  svg.append(\"text\").attr(\"class\", \"chart-subtitle\").attr(\"x\", width / 2).attr(\"y\", -margin.top / 2 + 25).style(\"text-anchor\", \"middle\").style(\"font-size\", \"16px\").text(\"30 Day Stock Prices\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/searchbar.js\n");

/***/ }),

/***/ "./src/scripts/ticker_tape.js":
/*!************************************!*\
  !*** ./src/scripts/ticker_tape.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mainTicker; }\n/* harmony export */ });\nconst apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\n\n// here is the main entry function\nasync function mainTicker() {\n  const indexSelector = document.getElementById(\"index\");\n  const defaultIndexValue = \"sp500\";\n  indexSelector.value = defaultIndexValue;\n  updateStockTicker(defaultIndexValue);\n  indexSelector.addEventListener(\"change\", async function () {\n    const indexValue = indexSelector.value;\n    updateStockTicker(indexValue);\n  });\n}\n\n// function to fetch stock data\nasync function fetchStockData(indexValue) {\n  const indexData = await fetch(`https://financialmodelingprep.com/api/v3/${indexValue}_constituent?apikey=${apiKey}`).then(response => response.json());\n  const symbols = indexData.map(stock => stock.symbol).join(',');\n  const quotesData = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbols}?apikey=${apiKey}`).then(response => response.json());\n\n  // Combine the index and quotes data to get all the stocks and their current prices\n  const stocksData = indexData.map(stock => {\n    const quoteData = quotesData.find(quote => quote.symbol === stock.symbol);\n    return {\n      symbol: stock.symbol,\n      changesPercentage: quoteData ? quoteData.changesPercentage : null,\n      price: quoteData ? quoteData.price : null\n    };\n  });\n\n  // Sort the array alphabetically by symbol\n  stocksData.sort((a, b) => a.symbol.localeCompare(b.symbol));\n  return stocksData;\n}\n\n// function to update the stock ticker\nasync function updateStockTicker(indexValue) {\n  const stocksData = await fetchStockData(indexValue);\n  const ticker = document.querySelector('#ticker');\n\n  // Clear the ticker\n  ticker.innerHTML = '';\n\n  // Add a <p> element for each stock\n  stocksData.forEach(stock => {\n    const p = document.createElement('p');\n    p.textContent = `${stock.symbol}: ${stock.price ? stock.price.toFixed(2) : 'N/A'}`; // display symbol and price with 2 decimal places\n\n    // Set the color based on the change percentage\n    if (stock.changesPercentage < 0) {\n      p.classList.add('negative');\n    } else if (stock.changesPercentage >= 0) {\n      p.classList.add('positive');\n    }\n    ticker.appendChild(p);\n  });\n\n  // Scroll the ticker to the left\n  setInterval(() => {\n    const ticker = document.querySelector('#ticker');\n    ticker.scrollLeft += 2; // adjust scroll\n  }, 100); // adjust scroll interval\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQ0ksU0FBUyxDQUFDQyxHQUFHLENBQUMsVUFBVSxDQUFDO0lBQy9CLENBQUMsTUFBTSxJQUFJdkIsS0FBSyxDQUFDUSxpQkFBaUIsSUFBSSxDQUFDLEVBQUU7TUFDckNVLENBQUMsQ0FBQ0ksU0FBUyxDQUFDQyxHQUFHLENBQUMsVUFBVSxDQUFDO0lBQy9CO0lBRUFULE1BQU0sQ0FBQ1UsV0FBVyxDQUFDTixDQUFDLENBQUM7RUFDekIsQ0FBQyxDQUFDOztFQUVGO0VBQ0FPLFdBQVcsQ0FBQyxNQUFNO0lBQ2QsTUFBTVgsTUFBTSxHQUFHN0IsUUFBUSxDQUFDOEIsYUFBYSxDQUFDLFNBQVMsQ0FBQztJQUNoREQsTUFBTSxDQUFDWSxVQUFVLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDNUIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0b2NrX2hlYXRfbWFwLy4vc3JjL3NjcmlwdHMvdGlja2VyX3RhcGUuanM/NWVkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcGlLZXkgPSBcIjg2NjA1NjhkODJlYWVhNzU5YmIwZWM4ZTQ2MzAzM2QyXCI7XG5cbi8vIGhlcmUgaXMgdGhlIG1haW4gZW50cnkgZnVuY3Rpb25cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIG1haW5UaWNrZXIoKSB7XG4gICAgY29uc3QgaW5kZXhTZWxlY3RvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5kZXhcIik7XG4gICAgY29uc3QgZGVmYXVsdEluZGV4VmFsdWUgPSBcInNwNTAwXCI7XG4gICAgaW5kZXhTZWxlY3Rvci52YWx1ZSA9IGRlZmF1bHRJbmRleFZhbHVlO1xuICAgIHVwZGF0ZVN0b2NrVGlja2VyKGRlZmF1bHRJbmRleFZhbHVlKTtcblxuICAgIGluZGV4U2VsZWN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IGluZGV4VmFsdWUgPSBpbmRleFNlbGVjdG9yLnZhbHVlO1xuICAgICAgICB1cGRhdGVTdG9ja1RpY2tlcihpbmRleFZhbHVlKTtcbiAgICB9KTtcbn1cblxuLy8gZnVuY3Rpb24gdG8gZmV0Y2ggc3RvY2sgZGF0YVxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hTdG9ja0RhdGEoaW5kZXhWYWx1ZSkge1xuICAgIGNvbnN0IGluZGV4RGF0YSA9IGF3YWl0IGZldGNoKGBodHRwczovL2ZpbmFuY2lhbG1vZGVsaW5ncHJlcC5jb20vYXBpL3YzLyR7aW5kZXhWYWx1ZX1fY29uc3RpdHVlbnQ/YXBpa2V5PSR7YXBpS2V5fWApXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSk7XG4gICAgY29uc3Qgc3ltYm9scyA9IGluZGV4RGF0YS5tYXAoc3RvY2sgPT4gc3RvY2suc3ltYm9sKS5qb2luKCcsJyk7XG4gICAgY29uc3QgcXVvdGVzRGF0YSA9IGF3YWl0IGZldGNoKGBodHRwczovL2ZpbmFuY2lhbG1vZGVsaW5ncHJlcC5jb20vYXBpL3YzL3F1b3RlLyR7c3ltYm9sc30/YXBpa2V5PSR7YXBpS2V5fWApXG4gICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSk7XG5cbiAgICAvLyBDb21iaW5lIHRoZSBpbmRleCBhbmQgcXVvdGVzIGRhdGEgdG8gZ2V0IGFsbCB0aGUgc3RvY2tzIGFuZCB0aGVpciBjdXJyZW50IHByaWNlc1xuICAgIGNvbnN0IHN0b2Nrc0RhdGEgPSBpbmRleERhdGEubWFwKHN0b2NrID0+IHtcbiAgICAgICAgY29uc3QgcXVvdGVEYXRhID0gcXVvdGVzRGF0YS5maW5kKHF1b3RlID0+IHF1b3RlLnN5bWJvbCA9PT0gc3RvY2suc3ltYm9sKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN5bWJvbDogc3RvY2suc3ltYm9sLFxuICAgICAgICAgICAgY2hhbmdlc1BlcmNlbnRhZ2U6IHF1b3RlRGF0YSA/IHF1b3RlRGF0YS5jaGFuZ2VzUGVyY2VudGFnZSA6IG51bGwsXG4gICAgICAgICAgICBwcmljZTogcXVvdGVEYXRhID8gcXVvdGVEYXRhLnByaWNlIDogbnVsbFxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gU29ydCB0aGUgYXJyYXkgYWxwaGFiZXRpY2FsbHkgYnkgc3ltYm9sXG4gICAgc3RvY2tzRGF0YS5zb3J0KChhLCBiKSA9PiBhLnN5bWJvbC5sb2NhbGVDb21wYXJlKGIuc3ltYm9sKSk7XG5cbiAgICByZXR1cm4gc3RvY2tzRGF0YTtcbn1cblxuLy8gZnVuY3Rpb24gdG8gdXBkYXRlIHRoZSBzdG9jayB0aWNrZXJcbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVN0b2NrVGlja2VyKGluZGV4VmFsdWUpIHtcbiAgICBjb25zdCBzdG9ja3NEYXRhID0gYXdhaXQgZmV0Y2hTdG9ja0RhdGEoaW5kZXhWYWx1ZSk7XG4gICAgY29uc3QgdGlja2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpY2tlcicpO1xuXG4gICAgLy8gQ2xlYXIgdGhlIHRpY2tlclxuICAgIHRpY2tlci5pbm5lckhUTUwgPSAnJztcblxuICAgIC8vIEFkZCBhIDxwPiBlbGVtZW50IGZvciBlYWNoIHN0b2NrXG4gICAgc3RvY2tzRGF0YS5mb3JFYWNoKHN0b2NrID0+IHtcbiAgICAgICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgcC50ZXh0Q29udGVudCA9IGAke3N0b2NrLnN5bWJvbH06ICR7c3RvY2sucHJpY2UgPyBzdG9jay5wcmljZS50b0ZpeGVkKDIpIDogJ04vQSd9YDsgLy8gZGlzcGxheSBzeW1ib2wgYW5kIHByaWNlIHdpdGggMiBkZWNpbWFsIHBsYWNlc1xuXG4gICAgICAgIC8vIFNldCB0aGUgY29sb3IgYmFzZWQgb24gdGhlIGNoYW5nZSBwZXJjZW50YWdlXG4gICAgICAgIGlmIChzdG9jay5jaGFuZ2VzUGVyY2VudGFnZSA8IDApIHtcbiAgICAgICAgICAgIHAuY2xhc3NMaXN0LmFkZCgnbmVnYXRpdmUnKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdG9jay5jaGFuZ2VzUGVyY2VudGFnZSA+PSAwKSB7XG4gICAgICAgICAgICBwLmNsYXNzTGlzdC5hZGQoJ3Bvc2l0aXZlJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aWNrZXIuYXBwZW5kQ2hpbGQocCk7XG4gICAgfSk7XG5cbiAgICAvLyBTY3JvbGwgdGhlIHRpY2tlciB0byB0aGUgbGVmdFxuICAgIHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgY29uc3QgdGlja2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpY2tlcicpO1xuICAgICAgICB0aWNrZXIuc2Nyb2xsTGVmdCArPSAyOyAvLyBhZGp1c3Qgc2Nyb2xsXG4gICAgfSwgMTAwKTsgLy8gYWRqdXN0IHNjcm9sbCBpbnRlcnZhbFxufVxuIl0sIm5hbWVzIjpbImFwaUtleSIsIm1haW5UaWNrZXIiLCJpbmRleFNlbGVjdG9yIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImRlZmF1bHRJbmRleFZhbHVlIiwidmFsdWUiLCJ1cGRhdGVTdG9ja1RpY2tlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbmRleFZhbHVlIiwiZmV0Y2hTdG9ja0RhdGEiLCJpbmRleERhdGEiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJzeW1ib2xzIiwibWFwIiwic3RvY2siLCJzeW1ib2wiLCJqb2luIiwicXVvdGVzRGF0YSIsInN0b2Nrc0RhdGEiLCJxdW90ZURhdGEiLCJmaW5kIiwicXVvdGUiLCJjaGFuZ2VzUGVyY2VudGFnZSIsInByaWNlIiwic29ydCIsImEiLCJiIiwibG9jYWxlQ29tcGFyZSIsInRpY2tlciIsInF1ZXJ5U2VsZWN0b3IiLCJpbm5lckhUTUwiLCJmb3JFYWNoIiwicCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInRvRml4ZWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJhcHBlbmRDaGlsZCIsInNldEludGVydmFsIiwic2Nyb2xsTGVmdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/ticker_tape.js\n");

/***/ }),

/***/ "./src/scripts/time.js":
/*!*****************************!*\
  !*** ./src/scripts/time.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ updateTime; }\n/* harmony export */ });\nfunction updateTime() {\n  let options = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: '2-digit',\n    second: '2-digit',\n    timeZone: 'America/New_York'\n  };\n  let dt = new Date();\n  let dateTimeString = dt.toLocaleString('en-US', options);\n  dateTimeString = dateTimeString.replace(/([A-Z]+) Standard Time$/, '$1');\n\n  // Calculate time left until the market opens or closes\n  let openTime = new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate(), 13, 30, 0)); // Market opens at 9:30 AM EST (which is 1:30 PM UTC)\n  let closeTime = new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate(), 20, 0, 0)); // Market closes at 4:00 PM EST (which is 8:00 PM UTC)\n  let timeDiff = openTime - dt;\n  let timeLeft = '';\n  if (timeDiff > 0) {\n    // Market is not open yet\n    timeLeft = Math.floor(timeDiff / 1000 / 60 / 60) + ' hr ' + Math.floor(timeDiff / 1000 / 60 % 60) + ' min until open';\n  } else if (dt < closeTime) {\n    // Market is open\n    timeDiff = closeTime - dt;\n    timeLeft = Math.floor(timeDiff / 1000 / 60 / 60) + ' hr ' + Math.floor(timeDiff / 1000 / 60 % 60) + ' min until close';\n  } else {\n    // Market is closed\n    timeLeft = 'Market is closed';\n  }\n  let nyTime = new Date().toLocaleString(\"en-US\", {\n    timeZone: \"America/New_York\"\n  });\n  let nyHour = new Date(nyTime).getHours();\n  if (nyHour >= 9 && nyHour < 16) {\n    // Market is open - set text color to green\n    dateTimeString += ' EST  |  ' + timeLeft;\n    document.getElementById(\"datetime\").style.color = \"green\";\n  } else {\n    // Market is closed - set text color to red\n    dateTimeString += ' EST  |  ' + timeLeft;\n    document.getElementById(\"datetime\").style.color = \"red\";\n  }\n  document.getElementById(\"datetime\").innerHTML = dateTimeString;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWMsQ0FBQyxVQUFVLENBQUMsQ0FBQ0MsS0FBSyxDQUFDQyxLQUFLLEdBQUcsS0FBSztFQUMzRDtFQUVBSCxRQUFRLENBQUNDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQ0csU0FBUyxHQUFHcEIsY0FBYztBQUNsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0b2NrX2hlYXRfbWFwLy4vc3JjL3NjcmlwdHMvdGltZS5qcz9mMmI2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVwZGF0ZVRpbWUoKSB7XG4gICAgbGV0IG9wdGlvbnMgPSB7XG4gICAgICAgIHdlZWtkYXk6ICdzaG9ydCcsXG4gICAgICAgIG1vbnRoOiAnc2hvcnQnLFxuICAgICAgICBkYXk6ICdudW1lcmljJyxcbiAgICAgICAgeWVhcjogJ251bWVyaWMnLFxuICAgICAgICBob3VyOiAnbnVtZXJpYycsXG4gICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLFxuICAgICAgICBzZWNvbmQ6ICcyLWRpZ2l0JyxcbiAgICAgICAgdGltZVpvbmU6ICdBbWVyaWNhL05ld19Zb3JrJyxcbiAgICB9O1xuXG4gICAgbGV0IGR0ID0gbmV3IERhdGUoKTtcbiAgICBsZXQgZGF0ZVRpbWVTdHJpbmcgPSBkdC50b0xvY2FsZVN0cmluZygnZW4tVVMnLCBvcHRpb25zKTtcbiAgICBkYXRlVGltZVN0cmluZyA9IGRhdGVUaW1lU3RyaW5nLnJlcGxhY2UoLyhbQS1aXSspIFN0YW5kYXJkIFRpbWUkLywgJyQxJyk7XG5cbiAgICAvLyBDYWxjdWxhdGUgdGltZSBsZWZ0IHVudGlsIHRoZSBtYXJrZXQgb3BlbnMgb3IgY2xvc2VzXG4gICAgbGV0IG9wZW5UaW1lID0gbmV3IERhdGUoRGF0ZS5VVEMoZHQuZ2V0RnVsbFllYXIoKSwgZHQuZ2V0TW9udGgoKSwgZHQuZ2V0RGF0ZSgpLCAxMywgMzAsIDApKTsgLy8gTWFya2V0IG9wZW5zIGF0IDk6MzAgQU0gRVNUICh3aGljaCBpcyAxOjMwIFBNIFVUQylcbiAgICBsZXQgY2xvc2VUaW1lID0gbmV3IERhdGUoRGF0ZS5VVEMoZHQuZ2V0RnVsbFllYXIoKSwgZHQuZ2V0TW9udGgoKSwgZHQuZ2V0RGF0ZSgpLCAyMCwgMCwgMCkpOyAvLyBNYXJrZXQgY2xvc2VzIGF0IDQ6MDAgUE0gRVNUICh3aGljaCBpcyA4OjAwIFBNIFVUQylcbiAgICBsZXQgdGltZURpZmYgPSBvcGVuVGltZSAtIGR0O1xuICAgIGxldCB0aW1lTGVmdCA9ICcnO1xuXG4gICAgaWYgKHRpbWVEaWZmID4gMCkgeyAvLyBNYXJrZXQgaXMgbm90IG9wZW4geWV0XG4gICAgICAgIHRpbWVMZWZ0ID0gTWF0aC5mbG9vcih0aW1lRGlmZiAvIDEwMDAgLyA2MCAvIDYwKSArICcgaHIgJyArIE1hdGguZmxvb3IoKHRpbWVEaWZmIC8gMTAwMCAvIDYwKSAlIDYwKSArICcgbWluIHVudGlsIG9wZW4nO1xuICAgIH0gZWxzZSBpZiAoZHQgPCBjbG9zZVRpbWUpIHsgLy8gTWFya2V0IGlzIG9wZW5cbiAgICAgICAgdGltZURpZmYgPSBjbG9zZVRpbWUgLSBkdDtcbiAgICAgICAgdGltZUxlZnQgPSBNYXRoLmZsb29yKHRpbWVEaWZmIC8gMTAwMCAvIDYwIC8gNjApICsgJyBociAnICsgTWF0aC5mbG9vcigodGltZURpZmYgLyAxMDAwIC8gNjApICUgNjApICsgJyBtaW4gdW50aWwgY2xvc2UnO1xuICAgIH0gZWxzZSB7IC8vIE1hcmtldCBpcyBjbG9zZWRcbiAgICAgICAgdGltZUxlZnQgPSAnTWFya2V0IGlzIGNsb3NlZCc7XG4gICAgfVxuXG4gICAgbGV0IG55VGltZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiLCB7dGltZVpvbmU6IFwiQW1lcmljYS9OZXdfWW9ya1wifSk7XG4gICAgbGV0IG55SG91ciA9IG5ldyBEYXRlKG55VGltZSkuZ2V0SG91cnMoKTtcblxuICAgIGlmIChueUhvdXIgPj0gOSAmJiBueUhvdXIgPCAxNikge1xuICAgICAgICAvLyBNYXJrZXQgaXMgb3BlbiAtIHNldCB0ZXh0IGNvbG9yIHRvIGdyZWVuXG4gICAgICAgIGRhdGVUaW1lU3RyaW5nICs9ICcgRVNUICB8ICAnICsgdGltZUxlZnQ7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGF0ZXRpbWVcIikuc3R5bGUuY29sb3IgPSBcImdyZWVuXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWFya2V0IGlzIGNsb3NlZCAtIHNldCB0ZXh0IGNvbG9yIHRvIHJlZFxuICAgICAgICBkYXRlVGltZVN0cmluZyArPSAnIEVTVCAgfCAgJyArIHRpbWVMZWZ0O1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGV0aW1lXCIpLnN0eWxlLmNvbG9yID0gXCJyZWRcIjtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGV0aW1lXCIpLmlubmVySFRNTCA9IGRhdGVUaW1lU3RyaW5nO1xufVxuIl0sIm5hbWVzIjpbInVwZGF0ZVRpbWUiLCJvcHRpb25zIiwid2Vla2RheSIsIm1vbnRoIiwiZGF5IiwieWVhciIsImhvdXIiLCJtaW51dGUiLCJzZWNvbmQiLCJ0aW1lWm9uZSIsImR0IiwiRGF0ZSIsImRhdGVUaW1lU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJyZXBsYWNlIiwib3BlblRpbWUiLCJVVEMiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImNsb3NlVGltZSIsInRpbWVEaWZmIiwidGltZUxlZnQiLCJNYXRoIiwiZmxvb3IiLCJueVRpbWUiLCJueUhvdXIiLCJnZXRIb3VycyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImNvbG9yIiwiaW5uZXJIVE1MIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/time.js\n");

/***/ }),

/***/ "./src/scripts/title.js":
/*!******************************!*\
  !*** ./src/scripts/title.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ updateTitle; }\n/* harmony export */ });\nasync function updateTitle() {\n  const indexSelector = document.getElementById(\"index\");\n  const sizeSelector = document.getElementById(\"size-by\");\n  const titleElement = document.getElementById('description');\n  const defaultIndexValue = \"sp500\";\n  const defaultSizeValue = \"marketCap\";\n  indexSelector.value = defaultIndexValue;\n  sizeSelector.value = defaultSizeValue;\n\n  // this is for the select index dropdown\n  function updateTitleFromIndex() {\n    const indexValue = indexSelector.value;\n    const sizeValue = sizeSelector.value;\n    return indexValue === \"sp500\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents market cap.\" : indexValue === \"sp500\" && sizeValue === \"volume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents volume.\" : indexValue === \"sp500\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents average volume.\" : indexValue === \"sp500\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents shares outstanding.\" : indexValue === \"dowjones\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents market cap.\" : indexValue === \"dowjones\" && sizeValue === \"volume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents volume.\" : indexValue === \"dowjones\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents average volume.\" : indexValue === \"dowjones\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents shares outstanding.\" : indexValue === \"nasdaq\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents market cap.\" : indexValue === \"nasdaq\" && sizeValue === \"volume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents volume.\" : indexValue === \"nasdaq\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents average volume.\" : indexValue === \"nasdaq\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents shares outstanding.\" : titleElement.innerText = `${indexValue} index stocks categorized by industries. Size represents ${sizeValue}.`;\n  }\n\n  // this is for the select size-by dropdown\n  function updateTitleFromSize() {\n    const sizeValue = sizeSelector.value;\n    const indexValue = indexSelector.value;\n    return indexValue === \"sp500\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents market cap.\" : indexValue === \"sp500\" && sizeValue === \"volume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents volume.\" : indexValue === \"sp500\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents average volume.\" : indexValue === \"sp500\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents shares outstanding.\" : indexValue === \"dowjones\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents market cap.\" : indexValue === \"dowjones\" && sizeValue === \"volume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents volume.\" : indexValue === \"dowjones\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents average volume.\" : indexValue === \"dowjones\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents shares outstanding.\" : indexValue === \"nasdaq\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents market cap.\" : indexValue === \"nasdaq\" && sizeValue === \"volume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents volume.\" : indexValue === \"nasdaq\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents average volume.\" : indexValue === \"nasdaq\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents shares outstanding.\" : titleElement.innerText = `${indexValue} index stocks categorized by industries. Size represents ${sizeValue}.`;\n  }\n\n  // call the event listener functions to set the default title text\n  updateTitleFromIndex();\n  updateTitleFromSize();\n  indexSelector.addEventListener(\"change\", updateTitleFromIndex);\n  sizeSelector.addEventListener(\"change\", updateTitleFromSize);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/title.js\n");

/***/ }),

/***/ "./src/scripts/treemap.js":
/*!********************************!*\
  !*** ./src/scripts/treemap.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mainTreemap; }\n/* harmony export */ });\nconst apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\nlet canvas = d3.select('#treemapcanvas');\n\n// here is the main entry function\nasync function mainTreemap() {\n  const indexSelector = document.getElementById(\"index\");\n  const sizeSelector = document.getElementById(\"size-by\");\n  const defaultIndexValue = \"sp500\";\n  const defaultSizeValue = \"marketCap\";\n  indexSelector.value = defaultIndexValue;\n  sizeSelector.value = defaultSizeValue;\n  const stockDataArray = await fetchStockData(defaultIndexValue);\n  const root = getStockTreeMapRoot(stockDataArray);\n  drawTreeMap(root, defaultSizeValue);\n\n  // this is for the select index dropdown\n  indexSelector.addEventListener(\"change\", async function () {\n    const indexValue = indexSelector.value;\n    const sizeValue = sizeSelector.value;\n    const stockDataArray = await fetchStockData(indexValue);\n    const root = getStockTreeMapRoot(stockDataArray);\n    drawStockTreeMap(root, sizeValue);\n  });\n\n  // this is for the select size-by dropdown\n  sizeSelector.addEventListener(\"change\", async function () {\n    const sizeValue = sizeSelector.value;\n    const indexValue = indexSelector.value;\n    const stockDataArray = await fetchStockData(indexValue);\n    const root = getStockTreeMapRoot(stockDataArray);\n    drawStockTreeMap(root, sizeValue);\n  });\n}\n\n// function to fetch stock data\nasync function fetchStockData(indexValue) {\n  const indexData = await fetch(`https://financialmodelingprep.com/api/v3/${indexValue}_constituent?apikey=${apiKey}`).then(response => response.json());\n  const symbols = indexData.map(stock => stock.symbol).join(',');\n  const quotesData = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbols}?apikey=${apiKey}`).then(response => response.json());\n  const stockDataMap = {};\n  indexData.forEach(stock => {\n    stockDataMap[stock.symbol] = {\n      name: stock.symbol,\n      sector: stock.sector,\n      fullName: stock.name,\n      subSector: stock.subSector,\n      marketCap: quotesData.find(quote => quote.symbol === stock.symbol).marketCap,\n      changesPercentage: quotesData.find(quote => quote.symbol === stock.symbol).changesPercentage,\n      volume: quotesData.find(quote => quote.symbol === stock.symbol).volume,\n      avgVolume: quotesData.find(quote => quote.symbol === stock.symbol).avgVolume,\n      sharesOutstanding: quotesData.find(quote => quote.symbol === stock.symbol).sharesOutstanding,\n      price: quotesData.find(quote => quote.symbol === stock.symbol).price,\n      changeValue: quotesData.find(quote => quote.symbol === stock.symbol).change,\n      dayLow: quotesData.find(quote => quote.symbol === stock.symbol).dayLow,\n      dayHigh: quotesData.find(quote => quote.symbol === stock.symbol).dayHigh,\n      yearHigh: quotesData.find(quote => quote.symbol === stock.symbol).yearHigh,\n      yearLow: quotesData.find(quote => quote.symbol === stock.symbol).yearLow,\n      priceAvg50: quotesData.find(quote => quote.symbol === stock.symbol).priceAvg50,\n      priceAvg200: quotesData.find(quote => quote.symbol === stock.symbol).priceAvg200,\n      open: quotesData.find(quote => quote.symbol === stock.symbol).open,\n      previousClose: quotesData.find(quote => quote.symbol === stock.symbol).previousClose,\n      eps: quotesData.find(quote => quote.symbol === stock.symbol).eps,\n      pe: quotesData.find(quote => quote.symbol === stock.symbol).pe\n    };\n  });\n  return Object.values(stockDataMap);\n}\n\n// function to get stock root for treemap\nfunction getStockTreeMapRoot(stockDataArray) {\n  const root = {\n    name: \"stock\",\n    children: []\n  };\n  const sectors = {};\n  stockDataArray.forEach(stock => {\n    const sector = stock.sector;\n    if (!sectors[sector]) {\n      sectors[sector] = {\n        name: sector,\n        children: []\n      };\n    }\n    sectors[sector].children.push(stock);\n  });\n  Object.values(sectors).forEach(sector => {\n    root.children.push(sector);\n  });\n  return root;\n}\n\n// function to draw the trees\nfunction drawStockTreeMap(root, defaultSizeValue) {\n  d3.selectAll('g').remove();\n  drawTreeMap(root, defaultSizeValue);\n}\n\n// ↑ this is the data api pull and format for the draw treemap\n//-------------------------------------------------------------------------------------------------------------\n// ↓ this is the draw treemap which creates the treemap for display\n\n//function to draw the treemap\nlet drawTreeMap = (stockData, size) => {\n  // sorts the hierarchy so that the largest marketcap stocks are at the top\n  let hierarchy = d3.hierarchy(stockData, node => {\n    return node['children'];\n  }).sum(node => {\n    return node[size];\n  }).sort((node1, node2) => {\n    return node2['value'] - node1['value']; // this has to be set to value and not marketCap as the hierarcy fucntion is renaming it value\n  });\n  // .size is the size of our canvas in the scss file\n  let generateTreeMap = d3.treemap().tile(d3.treemapBinary).size([canvas.node().clientWidth, canvas.node().clientHeight]).paddingOuter(7).paddingTop(43).paddingInner(2).round(true);\n\n  // this uses d3 to generate the treemap\n  generateTreeMap(hierarchy);\n  let stockTiles = hierarchy.leaves();\n\n  // create a new div for the details when mouse over\n  let detailsDiv = d3.select('body').append('div').attr('class', 'details').style('display', 'none');\n\n  // creates g elements inside the canvas. g elements are group tags. and sets the size of the element to an x and y axias. Click and mouseover events are defined here\n  let block = canvas.selectAll('g').data(stockTiles).enter().append('g').attr('transform', stock => {\n    return 'translate(' + stock['x0'] + ', ' + stock['y0'] + ')';\n  }).each(function (stock) {\n    // Save the original transform of the group element. Used in the popup\n    d3.select(this).attr('data-original-transform', d3.select(this).attr('transform'));\n    d3.select(this).attr('data-name', stock['data']['name']);\n    d3.select(this).attr('data-fullName', stock['data']['fullName']);\n    d3.select(this).attr('data-marketCap', stock['data']['marketCap'].toLocaleString('en-US'));\n    d3.select(this).attr('data-price', stock['data']['price'].toFixed(2));\n    d3.select(this).attr('data-changeValue', stock['data']['changeValue'].toFixed(2));\n    d3.select(this).attr('data-changesPercentage', stock['data']['changesPercentage'].toFixed(2));\n    d3.select(this).attr('data-dayLow', stock['data']['dayLow'].toFixed(2));\n    d3.select(this).attr('data-dayHigh', stock['data']['dayHigh'].toFixed(2));\n    d3.select(this).attr('data-yearHigh', stock['data']['yearHigh'].toFixed(2));\n    d3.select(this).attr('data-yearLow', stock['data']['yearLow'].toFixed(2));\n    d3.select(this).attr('data-priceAvg50', stock['data']['priceAvg50'].toFixed(2));\n    d3.select(this).attr('data-priceAvg200', stock['data']['priceAvg200'].toFixed(2));\n    d3.select(this).attr('data-open', stock['data']['open'].toFixed(2));\n    d3.select(this).attr('data-previousClose', stock['data']['previousClose'].toFixed(2));\n    d3.select(this).attr('data-eps', stock['data']['eps'].toFixed(2));\n    d3.select(this).attr('data-pe', stock['data']['pe'].toFixed(2));\n    d3.select(this).attr('data-x0', stock['x0'] + 27); // use this to set the postion of the popup\n    d3.select(this).attr('data-y0', stock['y0'] + 20); // use this to set the postion of the popup\n    d3.select(this).attr('data-x0', stock['x1'] + 40); // use this to set the postion of the popup\n    d3.select(this).attr('data-y0', stock['y1']); // use this to set the postion of the popup\n\n    // Calculate the scaling factor based on the area of the tile. This is used in the click/zoom\n    let area = (stock['x1'] - stock['x0']) * (stock['y1'] - stock['y0']);\n    let scale = Math.sqrt(160000 / area);\n    d3.select(this).attr('data-scale', scale);\n  })\n  // hover over function that displays stock info\n  .on('mouseover', function (stock) {\n    detailsDiv.html(`<strong>${d3.select(this).attr('data-fullName')}</strong>\n        <br>\n        <br>\n        Ticker: ${d3.select(this).attr('data-name')}\n        <br>\n        Market Cap: ${d3.select(this).attr('data-marketCap')}\n        <br>\n        Price: ${d3.select(this).attr('data-price')}\n        <br>\n        Change: ${d3.select(this).attr('data-changeValue')}\n        <br>\n        Change %: ${d3.select(this).attr('data-changesPercentage')}%\n        <br>\n        Low: ${d3.select(this).attr('data-dayLow')}\n        <br>\n        High: ${d3.select(this).attr('data-dayHigh')}\n        <br>\n        Open: ${d3.select(this).attr('data-open')}\n        <br>\n        Previous Close: ${d3.select(this).attr('data-previousClose')}\n        <br>\n        Yr High: ${d3.select(this).attr('data-yearHigh')}\n        <br>\n        Yr Low: ${d3.select(this).attr('data-yearLow')}\n        <br>\n        50 Day Avg: ${d3.select(this).attr('data-priceAvg50')}\n        <br>\n        200 Day Avg: ${d3.select(this).attr('data-priceAvg200')}\n        <br>\n        EPS: ${d3.select(this).attr('data-eps')}\n        <br>\n        PE: ${d3.select(this).attr('data-pe')}\n        `);\n    // This is where you can style the popup on mouseover\n    detailsDiv.style('display', 'block').style('padding', '10px').style('background-color', '#E2FFFF').style('border', '1px solid #ccc').style('border-radius', '5px').style(\"font-size\", \"16px\").style(\"font-family\", \"'Roboto Slab', serif\").style(\"font-weight\", \"bold\").style('box-shadow', '0px 0px 5px rgba(0, 0, 0, 0.1)').style('left', d3.select(this).attr('data-x0') + 'px').style('top', d3.select(this).attr('data-y0') + 'px');\n  }).on('mouseout', function () {\n    detailsDiv.style('display', 'none');\n    d3.select(this).select('.hover-text').remove();\n  })\n  // click function that pulls a stock to the middle of the screen\n  .on('click', function (stock) {\n    let originalTransform = d3.select(this).attr('data-original-transform');\n    let scale = d3.select(this).attr('data-scale');\n\n    // Move the selected block to the end of the canvas (in terms of rendering order). This puts it in the absolute front.\n    let node = d3.select(this).node();\n    node.parentNode.appendChild(node);\n\n    // If the tile has not been selected yet, color it and zoom in\n    if (d3.select(this).classed('selected') === false) {\n      // Color the selected tile\n      d3.select(this).select('rect').transition().duration(750).style('fill', 'orange');\n\n      // Scale the selected block by a factor based on the area of the tile\n      d3.select(this).each(function () {\n        // Store the original fill color of the rect\n        const rect = d3.select(this).select('rect');\n        rect.attr('data-original-fill', rect.style('fill'));\n      }).transition().duration(750).attr('transform', d3.zoomIdentity.translate(550, 350) // (x, y) on the whole canvas or screen\n      .scale(scale));\n      d3.select(this).classed('selected', true);\n    }\n    // If the tile has already been selected, un-color it and zoom out\n    else {\n      // Un-color the tile\n      d3.select(this).select('rect').transition().duration(750).style('fill', function () {\n        // Retrieve the original fill color of the rect\n        return d3.select(this).attr('data-original-fill');\n      });\n      // Reset the tile to its original size and position\n      d3.select(this).transition().duration(750).attr('transform', originalTransform);\n      d3.select(this).classed('selected', false);\n    }\n  });\n\n  // all g elements now have a class called tile, and color has been set to each category. These will turn into market sectors\n  block.append('rect').attr('class', 'tile')\n  // this is where we can set the fill color by daily percentage change\n  .attr(\"fill\", stock => {\n    return stock['data']['changesPercentage'] < -3 ? '#f63538' : stock['data']['changesPercentage'] < -2 ? '#bf4045' : stock['data']['changesPercentage'] < -1 ? '#f77c80' : stock['data']['changesPercentage'] > -1 && stock['data']['changesPercentage'] < 0 ? '#f77c80' : stock['data']['changesPercentage'] < 1 ? '#42bd7f' : stock['data']['changesPercentage'] < 2 ? '#2f9e4f' : stock['data']['changesPercentage'] < 3 ? '#35764e' : '#35764e';\n  }).attr(\"data-name\", stock => {\n    return stock['data']['name'];\n  }).attr('data-sector', stock => {\n    return stock['data']['sector'];\n  }).attr(`data-${size}`, stock => {\n    return stock[\"data\"][size];\n  }).attr('width', stock => {\n    return stock['x1'] - stock['x0'];\n  }).attr('height', stock => {\n    return stock['y1'] - stock['y0'];\n  });\n\n  // this resets the text so that we can re-render the titles. This must be abover all block.append text or it will break\n  canvas.selectAll(\"text\").remove();\n\n  // title feature for each sector\n  canvas.selectAll(\"titles\").data(hierarchy.children).enter().append(\"text\").attr('class', 'title').attr(\"x\", sector => sector.x0 + 7).attr(\"y\", sector => sector.y0 + 30).text(function (sector) {\n    return sector.data.name;\n  }).attr(\"font-size\", \"19px\").style(\"fill\", \"white\");\n\n  // sets the stock ticker attributes for each tile\n  block.append('text').text(stock => {\n    return stock['data']['name'];\n  }).attr('class', 'label').attr('x', stock => (stock['x1'] - stock['x0']) / 3).attr('y', stock => (stock['y1'] - stock['y0']) / 2).style('fill', 'white').attr('font-size', stock => `${Math.min((stock['x1'] - stock['x0']) / 10, (stock['y1'] - stock['y0']) / 10)}px`);\n\n  // sets the daily percentage change for each tile under the stock ticker. y is being offset so it dosen't layer on top of the stock ticker\n  block.append('text').text(stock => {\n    return `${stock['data']['changesPercentage'].toFixed(2)}%`;\n  }).attr('class', 'label').attr('x', stock => (stock['x1'] - stock['x0']) / 3).attr('y', stock => (stock['y1'] - stock['y0']) / 2 + (stock['y1'] - stock['y0']) / 12.5).style('fill', 'white').attr('font-size', stock => `${Math.min((stock['x1'] - stock['x0']) / 10, (stock['y1'] - stock['y0']) / 10)}px`);\n\n  // sets the company logo for each stock tile. Can't get around 404 because this is not a fetch.\n  block.append('image').attr('xlink:href', stock => `https://financialmodelingprep.com/image-stock/${stock['data']['name']}.png`).attr('class', 'label').attr('x', stock => (stock['x1'] - stock['x0']) / 3).attr('y', stock => (stock['y1'] - stock['y0']) / 2 + (stock['y1'] - stock['y0']) / 12.5).attr('width', stock => (stock['x1'] - stock['x0']) / 3).attr('height', stock => (stock['y1'] - stock['y0']) / 3);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/treemap.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdG9ja19oZWF0X21hcC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;