{"version":3,"file":"main.js","mappings":"qCAAA,MAAMA,EAAS,mCACf,IAAIC,EAASC,GAAGC,OAAO,kBAuCvBC,eAAeC,EAAeC,GAC5B,MAAMC,QAAkBC,MAAO,4CAA2CF,wBAAiCN,KACxGS,MAAKC,GAAYA,EAASC,SACvBC,EAAUL,EAAUM,KAAIC,GAASA,EAAMC,SAAQC,KAAK,KACpDC,QAAmBT,MAAO,kDAAiDI,YAAkBZ,KAChGS,MAAKC,GAAYA,EAASC,SACvBO,EAAe,CAAC,EA0BtB,OAzBAX,EAAUY,SAAQL,IAChBI,EAAaJ,EAAMC,QAAU,CAC3BK,KAAMN,EAAMC,OACZM,OAAQP,EAAMO,OACdC,SAAUR,EAAMM,KAChBG,UAAWT,EAAMS,UACjBC,UAAWP,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQS,UACnEG,kBAAmBV,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQY,kBAC3EC,OAAQX,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQa,OAChEC,UAAWZ,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQc,UACnEC,kBAAmBb,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQe,kBAC3EC,MAAOd,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQgB,MAC/DC,YAAaf,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQkB,OACrEC,OAAQjB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQmB,OAChEC,QAASlB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQoB,QACjEC,SAAUnB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQqB,SAClEC,QAASpB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQsB,QACjEC,WAAYrB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQuB,WACpEC,YAAatB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQwB,YACrEC,KAAMvB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQyB,KAC9DC,cAAexB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQ0B,cACvEC,IAAKzB,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQ2B,IAC7DC,GAAI1B,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAAQ4B,GAC7D,IAEIC,OAAOC,OAAO3B,EACvB,CAGA,SAAS4B,EAAoBC,GAC3B,MAAMC,EAAO,CACX5B,KAAM,QACN6B,SAAU,IAENC,EAAU,CAAC,EAcjB,OAbAH,EAAe5B,SAAQL,IACrB,MAAMO,EAASP,EAAMO,OAChB6B,EAAQ7B,KACX6B,EAAQ7B,GAAU,CAChBD,KAAMC,EACN4B,SAAU,KAGdC,EAAQ7B,GAAQ4B,SAASE,KAAKrC,EAAM,IAEtC8B,OAAOC,OAAOK,GAAS/B,SAAQE,IAC7B2B,EAAKC,SAASE,KAAK9B,EAAO,IAErB2B,CACT,CAGA,SAASI,EAAiBJ,EAAMK,GAC9BnD,GAAGoD,UAAU,KAAKC,SAClBC,EAAYR,EAAMK,EACpB,CAmBA,IAAIG,EAAcA,CAACC,EAAWC,KAG5B,IAAIC,EAAYzD,GAAGyD,UAAUF,GAAYG,GAChCA,EAAe,WACrBC,KAAKD,GACCA,EAAKF,KACXI,MAAK,CAACC,EAAOC,IACPA,EAAa,MAAID,EAAa,QAGjB7D,GAAG+D,UACtBC,KAAKhE,GAAGiE,eACRT,KAAK,CAACzD,EAAO2D,OAAOQ,YAAanE,EAAO2D,OAAOS,eAC/CC,aAAa,GACbC,WAAW,IACXC,aAAa,GACbC,OAAM,EAGTC,CAAgBf,GAEhB,IAAIgB,EAAahB,EAAUiB,SAGvBC,EAAa3E,GAAGC,OAAO,QACxB2E,OAAO,OACPC,KAAK,QAAS,WACdC,MAAM,UAAW,QAGhBC,EAAQhF,EAAOqD,UAAU,KAC1B4B,KAAKP,GACLQ,QACAL,OAAO,KACPC,KAAK,aAAcjE,GACX,aAAeA,EAAU,GAAI,KAAOA,EAAU,GAAI,MAE1DsE,MAAK,SAAUtE,GAEdZ,GAAGC,OAAOkF,MAAMN,KAAK,0BAA2B7E,GAAGC,OAAOkF,MAAMN,KAAK,cACrE7E,GAAGC,OAAOkF,MAAMN,KAAK,YAAajE,EAAY,KAAQ,MACtDZ,GAAGC,OAAOkF,MAAMN,KAAK,gBAAiBjE,EAAY,KAAY,UAC9DZ,GAAGC,OAAOkF,MAAMN,KAAK,iBAAkBjE,EAAY,KAAa,UAAEwE,eAAe,UACjFpF,GAAGC,OAAOkF,MAAMN,KAAK,aAAcjE,EAAY,KAAS,MAAEyE,QAAQ,IAClErF,GAAGC,OAAOkF,MAAMN,KAAK,mBAAoBjE,EAAY,KAAe,YAAEyE,QAAQ,IAC9ErF,GAAGC,OAAOkF,MAAMN,KAAK,yBAA0BjE,EAAY,KAAqB,kBAAEyE,QAAQ,IAC1FrF,GAAGC,OAAOkF,MAAMN,KAAK,cAAejE,EAAY,KAAU,OAAEyE,QAAQ,IACpErF,GAAGC,OAAOkF,MAAMN,KAAK,eAAgBjE,EAAY,KAAW,QAAEyE,QAAQ,IACtErF,GAAGC,OAAOkF,MAAMN,KAAK,gBAAiBjE,EAAY,KAAY,SAAEyE,QAAQ,IACxErF,GAAGC,OAAOkF,MAAMN,KAAK,eAAgBjE,EAAY,KAAW,QAAEyE,QAAQ,IACtErF,GAAGC,OAAOkF,MAAMN,KAAK,kBAAmBjE,EAAY,KAAc,WAAEyE,QAAQ,IAC5ErF,GAAGC,OAAOkF,MAAMN,KAAK,mBAAoBjE,EAAY,KAAe,YAAEyE,QAAQ,IAC9ErF,GAAGC,OAAOkF,MAAMN,KAAK,YAAajE,EAAY,KAAQ,KAAEyE,QAAQ,IAChErF,GAAGC,OAAOkF,MAAMN,KAAK,qBAAsBjE,EAAY,KAAiB,cAAEyE,QAAQ,IAClFrF,GAAGC,OAAOkF,MAAMN,KAAK,WAAYjE,EAAY,KAAO,IAAEyE,QAAQ,IAC9DrF,GAAGC,OAAOkF,MAAMN,KAAK,UAAWjE,EAAY,KAAM,GAAEyE,QAAQ,IAC5DrF,GAAGC,OAAOkF,MAAMN,KAAK,UAAWjE,EAAU,GAAI,IAC9CZ,GAAGC,OAAOkF,MAAMN,KAAK,UAAWjE,EAAU,GAAI,IAC9CZ,GAAGC,OAAOkF,MAAMN,KAAK,UAAWjE,EAAU,GAAI,IAC9CZ,GAAGC,OAAOkF,MAAMN,KAAK,UAAWjE,EAAU,IAG1C,IAAI0E,GAAQ1E,EAAU,GAAIA,EAAU,KAAMA,EAAU,GAAIA,EAAU,IAC9D2E,EAAQC,KAAKC,KAAK,KAASH,GAC/BtF,GAAGC,OAAOkF,MAAMN,KAAK,aAAcU,EACrC,IAECG,GAAG,aAAa,SAAU9E,GACzB+D,EAAWgB,KACR,WAAU3F,GAAGC,OAAOkF,MAAMN,KAAK,0EAGtB7E,GAAGC,OAAOkF,MAAMN,KAAK,mDAEjB7E,GAAGC,OAAOkF,MAAMN,KAAK,mDAE1B7E,GAAGC,OAAOkF,MAAMN,KAAK,gDAEpB7E,GAAGC,OAAOkF,MAAMN,KAAK,wDAEnB7E,GAAGC,OAAOkF,MAAMN,KAAK,0DAE1B7E,GAAGC,OAAOkF,MAAMN,KAAK,+CAEpB7E,GAAGC,OAAOkF,MAAMN,KAAK,gDAErB7E,GAAGC,OAAOkF,MAAMN,KAAK,uDAEX7E,GAAGC,OAAOkF,MAAMN,KAAK,yDAE5B7E,GAAGC,OAAOkF,MAAMN,KAAK,mDAEtB7E,GAAGC,OAAOkF,MAAMN,KAAK,sDAEjB7E,GAAGC,OAAOkF,MAAMN,KAAK,0DAEpB7E,GAAGC,OAAOkF,MAAMN,KAAK,mDAE7B7E,GAAGC,OAAOkF,MAAMN,KAAK,0CAEtB7E,GAAGC,OAAOkF,MAAMN,KAAK,wBAI7BF,EAAWG,MAAM,UAAW,SACzBA,MAAM,UAAW,QACjBA,MAAM,mBAAoB,WAC1BA,MAAM,SAAU,kBAChBA,MAAM,gBAAiB,OACvBA,MAAM,YAAa,QACnBA,MAAM,cAAe,wBACrBA,MAAM,cAAe,QACrBA,MAAM,aAAc,kCACpBA,MAAM,OAAQ9E,GAAGC,OAAOkF,MAAMN,KAAK,WAAa,MAChDC,MAAM,MAAO9E,GAAGC,OAAOkF,MAAMN,KAAK,WAAa,KACpD,IACCa,GAAG,YAAY,WACdf,EAAWG,MAAM,UAAW,QAC5B9E,GAAGC,OAAOkF,MAAMlF,OAAO,eAAeoD,QACxC,IAECqC,GAAG,SAAS,SAAU9E,GACrB,IAAIgF,EAAoB5F,GAAGC,OAAOkF,MAAMN,KAAK,2BAEzCU,EAAQvF,GAAGC,OAAOkF,MAAMN,KAAK,cAG7BnB,EAAO1D,GAAGC,OAAOkF,MAAMzB,OAC3BA,EAAKmC,WAAWC,YAAYpC,IAGgB,IAAxC1D,GAAGC,OAAOkF,MAAMY,QAAQ,aAE1B/F,GAAGC,OAAOkF,MACPlF,OAAO,QACP+F,aACAC,SAAS,KACTnB,MAAM,OAAQ,UAGjB9E,GAAGC,OAAOkF,MACPD,MAAK,WAEJ,MAAMgB,EAAOlG,GAAGC,OAAOkF,MAAMlF,OAAO,QACpCiG,EAAKrB,KAAK,qBAAsBqB,EAAKpB,MAAM,QAC7C,IACCkB,aACAC,SAAS,KACTpB,KAAK,YAAa7E,GAAGmG,aACnBC,UAAU,IAAK,KACfb,MAAMA,IAEXvF,GAAGC,OAAOkF,MAAMY,QAAQ,YAAY,KAKpC/F,GAAGC,OAAOkF,MACPlF,OAAO,QACP+F,aACAC,SAAS,KACTnB,MAAM,QAAQ,WAEb,OAAO9E,GAAGC,OAAOkF,MAAMN,KAAK,qBAC9B,IAEF7E,GAAGC,OAAOkF,MACPa,aACAC,SAAS,KACTpB,KAAK,YAAae,GAErB5F,GAAGC,OAAOkF,MAAMY,QAAQ,YAAY,GAExC,IAIFhB,EAAMH,OAAO,QACVC,KAAK,QAAS,QAEdA,KAAK,QAASjE,GACNA,EAAY,KAAqB,mBAAK,EAAI,UAC/CA,EAAY,KAAqB,mBAAK,EAAI,UACxCA,EAAY,KAAqB,mBAAK,GACpCA,EAAY,KAAqB,mBAAK,GAAKA,EAAY,KAAqB,kBAAI,EADxC,UAEtCA,EAAY,KAAqB,kBAAI,EAAI,UACvCA,EAAY,KAAqB,kBAAI,EAAI,WACvCA,EAAY,KAAqB,kBAAQ,aAEpDiE,KAAK,aAAcjE,GACbA,EAAY,KAAQ,OAC1BiE,KAAK,eAAgBjE,GACfA,EAAY,KAAU,SAC5BiE,KAAM,QAAOrB,KAAS5C,GAChBA,EAAY,KAAE4C,KACpBqB,KAAK,SAAUjE,GACTA,EAAU,GAAIA,EAAU,KAC9BiE,KAAK,UAAWjE,GACVA,EAAU,GAAIA,EAAU,KAInCb,EAAOqD,UAAU,QAAQC,SAGzBtD,EACGqD,UAAU,UACV4B,KAAKvB,EAAUV,UACfkC,QACAL,OAAO,QACPC,KAAK,QAAS,SACdA,KAAK,KAAM1D,GAAYA,EAAOkF,GAAK,IACnCxB,KAAK,KAAM1D,GAAYA,EAAOmF,GAAK,KACnCC,MAAK,SAAUpF,GAAU,OAAOA,EAAO6D,KAAK9D,IAAK,IACjD2D,KAAK,YAAa,QAClBC,MAAM,OAAQ,SAGjBC,EAAMH,OAAO,QACV2B,MAAM3F,GACEA,EAAY,KAAQ,OAE5BiE,KAAK,QAAS,SACdA,KAAK,KAAMjE,IAAWA,EAAU,GAAIA,EAAU,IAAK,IACnDiE,KAAK,KAAMjE,IAAYA,EAAU,GAAIA,EAAU,IAAK,IACpDkE,MAAM,OAAQ,SACdD,KAAK,aAAcjE,GAAW,GAAE4E,KAAKgB,KAAK5F,EAAU,GAAIA,EAAU,IAAK,IAAKA,EAAU,GAAIA,EAAU,IAAK,UAG5GmE,EAAMH,OAAO,QACV2B,MAAM3F,GACG,GAAEA,EAAY,KAAqB,kBAAEyE,QAAQ,QAEtDR,KAAK,QAAS,SACdA,KAAK,KAAMjE,IAAWA,EAAU,GAAIA,EAAU,IAAK,IACnDiE,KAAK,KAAMjE,IAAaA,EAAU,GAAIA,EAAU,IAAK,GAAOA,EAAU,GAAIA,EAAU,IAAK,OACzFkE,MAAM,OAAQ,SACdD,KAAK,aAAcjE,GAAW,GAAE4E,KAAKgB,KAAK5F,EAAU,GAAIA,EAAU,IAAK,IAAKA,EAAU,GAAIA,EAAU,IAAK,UAG5GmE,EAAMH,OAAO,SACVC,KAAK,cAAejE,GAAW,iDAAgDA,EAAY,KAAQ,aACnGiE,KAAK,QAAS,SACdA,KAAK,KAAMjE,IAAWA,EAAU,GAAIA,EAAU,IAAK,IACnDiE,KAAK,KAAMjE,IAAaA,EAAU,GAAIA,EAAU,IAAK,GAAOA,EAAU,GAAIA,EAAU,IAAK,OACzFiE,KAAK,SAAUjE,IAAWA,EAAU,GAAIA,EAAU,IAAK,IACvDiE,KAAK,UAAWjE,IAAWA,EAAU,GAAIA,EAAU,IAAK,GAAE,EChX/D,MAAMd,EAAS,mCAwCfI,eAAeuG,EAAkBrG,GAC7B,MAAMsG,QAzBVxG,eAA8BE,GAC1B,MAAMC,QAAkBC,MAAO,4CAA2CF,wBAAiCN,KACtGS,MAAKC,GAAYA,EAASC,SACzBC,EAAUL,EAAUM,KAAIC,GAASA,EAAMC,SAAQC,KAAK,KACpDC,QAAmBT,MAAO,kDAAiDI,YAAkBZ,KAC9FS,MAAKC,GAAYA,EAASC,SAGzBiG,EAAarG,EAAUM,KAAIC,IAC7B,MAAM+F,EAAY5F,EAAWQ,MAAKC,GAASA,EAAMX,SAAWD,EAAMC,SAClE,MAAO,CACHA,OAAQD,EAAMC,OACdY,kBAAmBkF,EAAYA,EAAUlF,kBAAoB,KAC7DI,MAAO8E,EAAYA,EAAU9E,MAAQ,KACxC,IAML,OAFA6E,EAAW9C,MAAK,CAACgD,EAAGC,IAAMD,EAAE/F,OAAOiG,cAAcD,EAAEhG,UAE5C6F,CACX,CAI6BvG,CAAeC,GAClC2G,EAASC,SAASC,cAAc,WAGtCF,EAAOG,UAAY,GAGnBR,EAAWzF,SAAQL,IACf,MAAMuG,EAAIH,SAASI,cAAc,KACjCD,EAAEE,YAAe,GAAEzG,EAAMC,WAAWD,EAAMiB,MAAQjB,EAAMiB,MAAMwD,QAAQ,GAAK,QAGvEzE,EAAMa,kBAAoB,EAC1B0F,EAAEG,UAAUC,IAAI,YACT3G,EAAMa,mBAAqB,GAClC0F,EAAEG,UAAUC,IAAI,YAGpBR,EAAOjB,YAAYqB,EAAE,IAIzBK,aAAY,KACOR,SAASC,cAAc,WAC/BQ,YAAc,CAAC,GACvB,IACP,CCnEe,SAASC,IACpB,IAWIC,EAAK,IAAIC,KACTC,EAAiBF,EAAGvC,eAAe,QAZzB,CACV0C,QAAS,QACTC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,qBAKdR,EAAiBA,EAAeS,QAAQ,0BAA2B,MAGnE,IAAIC,EAAW,IAAIX,KAAKA,KAAKY,IAAIb,EAAGc,cAAed,EAAGe,WAAYf,EAAGgB,UAAW,GAAI,GAAI,IACpFC,EAAY,IAAIhB,KAAKA,KAAKY,IAAIb,EAAGc,cAAed,EAAGe,WAAYf,EAAGgB,UAAW,GAAI,EAAG,IACpFE,EAAWN,EAAWZ,EACtBmB,EAAW,GAEXD,EAAW,EACXC,EAAWtD,KAAKuD,MAAMF,EAAW,IAAO,GAAK,IAAM,OAASrD,KAAKuD,MAAOF,EAAW,IAAO,GAAM,IAAM,kBAC/FlB,EAAKiB,GACZC,EAAWD,EAAYjB,EACvBmB,EAAWtD,KAAKuD,MAAMF,EAAW,IAAO,GAAK,IAAM,OAASrD,KAAKuD,MAAOF,EAAW,IAAO,GAAM,IAAM,oBAEtGC,EAAW,mBAGf,IAAIE,GAAS,IAAIpB,MAAOxC,eAAe,QAAS,CAACiD,SAAU,qBACvDY,EAAS,IAAIrB,KAAKoB,GAAQE,WAE1BD,GAAU,GAAKA,EAAS,IAExBpB,GAAkB,YAAciB,EAChC9B,SAASmC,eAAe,YAAYrE,MAAMsE,MAAQ,UAGlDvB,GAAkB,YAAciB,EAChC9B,SAASmC,eAAe,YAAYrE,MAAMsE,MAAQ,OAGtDpC,SAASmC,eAAe,YAAYjC,UAAYW,CACpD,CC7CA,MAAM/H,EAAS,mCAETuJ,EAAQrC,SAASC,cAAc,UACjBD,SAASC,cAAc,iBAG/BqC,iBAAiB,SAAS,WAClCD,EAAME,MAAQ,GAEdvC,SAASmC,eAAe,kBAAkBrE,MAAM0E,QAAU,OAE1DxC,SAASmC,eAAe,WAAWrE,MAAM0E,QAAU,OACnDxC,SAASmC,eAAe,eAAerE,MAAM0E,QAAU,OACvDxC,SAASmC,eAAe,iBAAiBrE,MAAM0E,QAAU,MAC7D,IHVetJ,iBACb,MAAMuJ,EAAgBzC,SAASmC,eAAe,SACxCO,EAAe1C,SAASmC,eAAe,WAEvCQ,EAAoB,QACpBxG,EAAmB,YAEzBsG,EAAcF,MAAQI,EACtBD,EAAaH,MAAQpG,EAErB,MACML,EAAOF,QADgBzC,EAAewJ,IAG5CrG,EAAYR,EAAMK,GAGlBsG,EAAcH,iBAAiB,UAAUpJ,iBACvC,MAAME,EAAaqJ,EAAcF,MAC3BK,EAAYF,EAAaH,MAG/BrG,EADaN,QADgBzC,EAAeC,IAErBwJ,EACzB,IAGAF,EAAaJ,iBAAiB,UAAUpJ,iBACtC,MAAM0J,EAAYF,EAAaH,MACzBnJ,EAAaqJ,EAAcF,MAGjCrG,EADaN,QADgBzC,EAAeC,IAErBwJ,EACzB,GACF,CInCAC,GHEe3J,iBACX,MAAMuJ,EAAgBzC,SAASmC,eAAe,SACxCQ,EAAoB,QAC1BF,EAAcF,MAAQI,EACtBlD,EAAkBkD,GAElBF,EAAcH,iBAAiB,UAAUpJ,iBAErCuG,EADmBgD,EAAcF,MAErC,GACJ,CGTAO,GAGApC,IAGAF,YAAYE,EAAY,KCVTxH,iBAEX,MAAMuJ,EAAgBzC,SAASmC,eAAe,SACxCO,EAAe1C,SAASmC,eAAe,WACvCY,EAAe/C,SAASmC,eAAe,eAS7C,SAASa,IACL,MAAM5J,EAAaqJ,EAAcF,MAC3BK,EAAYF,EAAaH,MAC/B,OAA6DQ,EAAaE,UAApD,UAAf7J,GAAwC,cAAdwJ,EAAqD,8EACnE,UAAfxJ,GAAwC,WAAdwJ,EAAkD,0EACzD,UAAfxJ,GAAwC,cAAdwJ,EAAqD,kFAC5D,UAAfxJ,GAAwC,sBAAdwJ,EAA6D,sFACpE,aAAfxJ,GAA2C,cAAdwJ,EAAqD,gFAC/D,aAAfxJ,GAA2C,WAAdwJ,EAAkD,4EAC5D,aAAfxJ,GAA2C,cAAdwJ,EAAqD,oFAC/D,aAAfxJ,GAA2C,sBAAdwJ,EAA6D,wFACvE,WAAfxJ,GAAyC,cAAdwJ,EAAqD,6EAC7D,WAAfxJ,GAAyC,WAAdwJ,EAAkD,yEAC1D,WAAfxJ,GAAyC,cAAdwJ,EAAqD,iFAC7D,WAAfxJ,GAAyC,sBAAdwJ,EAA6D,qFAAiH,GAAExJ,6DAAsEwJ,IACjU,CAGA,SAASM,IACL,MAAMN,EAAYF,EAAaH,MACzBnJ,EAAaqJ,EAAcF,MACjC,OAA6DQ,EAAaE,UAApD,UAAf7J,GAAwC,cAAdwJ,EAAqD,8EACnE,UAAfxJ,GAAwC,WAAdwJ,EAAkD,0EACzD,UAAfxJ,GAAwC,cAAdwJ,EAAqD,kFAC5D,UAAfxJ,GAAwC,sBAAdwJ,EAA6D,sFACpE,aAAfxJ,GAA2C,cAAdwJ,EAAqD,gFAC/D,aAAfxJ,GAA2C,WAAdwJ,EAAkD,4EAC5D,aAAfxJ,GAA2C,cAAdwJ,EAAqD,oFAC/D,aAAfxJ,GAA2C,sBAAdwJ,EAA6D,wFACvE,WAAfxJ,GAAyC,cAAdwJ,EAAqD,6EAC7D,WAAfxJ,GAAyC,WAAdwJ,EAAkD,yEAC1D,WAAfxJ,GAAyC,cAAdwJ,EAAqD,iFAC7D,WAAfxJ,GAAyC,sBAAdwJ,EAA6D,qFAAiH,GAAExJ,6DAAsEwJ,IAEjU,CAtCAH,EAAcF,MAHY,QAI1BG,EAAaH,MAHY,YA2CzBS,IACAE,IAEAT,EAAcH,iBAAiB,SAAUU,GACzCN,EAAaJ,iBAAiB,SAAUY,EAC5C,CD1CAC,GAGAnD,SAASmC,eAAe,UAAUG,iBAAiB,SAAS,SAAUc,IDAvDlK,eAA0BmK,GACrCA,EAAUC,iBAGV,MAAMC,EAAcvD,SAASmC,eAAe,SAASI,MAG/CiB,QA4JVtK,eAA6BuK,GAEzB,MAAMC,EAAU,oDAAmDD,YAAqB3K,IAExF,aAAaQ,MAAMoK,GACdnK,MAAKC,GAAYA,EAASC,SAC1BF,MAAKyE,IACF,MAAM2F,EAAgBC,KAAKC,UAAU7F,GAErC,OADyB4F,KAAKE,MAAMH,EACb,IAE1BI,OAAMC,IACHC,QAAQD,MAAMA,GACPA,IAEnB,CA3K8BE,CAAcX,GAGlCY,SA2KVjL,eAA4BkL,GACxB,MAAMV,EAAU,+DAA8DU,YAAkBtL,IAChG,aAAaQ,MAAMoK,GACdnK,MAAKC,GAAYA,EAASC,SAC1BF,MAAKyE,IACF,MAAM2F,EAAgBC,KAAKC,UAAU7F,GAErC,OADyB4F,KAAKE,MAAMH,EACb,IAE1BI,OAAMC,IACHC,QAAQD,MAAMA,GACPA,IAEnB,CAzLuBK,CAAad,IACPe,MAAM,EAAG,GAI5BC,EAAevE,SAASmC,eAAe,gBACvCqC,QAsLVtL,eAAkCkL,GAC9B,MAAMV,EAAU,kEAAiEU,2BAAiCtL,IAClH,aAAaQ,MAAMoK,GACdnK,MAAKC,GAAYA,EAASC,SAC1BF,MAAKyE,IACF,MAAM2F,EAAgBC,KAAKC,UAAU7F,GAErC,OADyB4F,KAAKE,MAAMH,EACb,IAE1BI,OAAMC,IACHC,QAAQD,MAAMA,GACPA,IAEnB,CAnMkCS,CAAmBlB,GAC7CgB,GACAA,EAAalI,SAsMrB,SAA8B2B,GAE1B,MAAM0G,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,IACjDC,EAAQ,KAAOD,EAAcA,EAC7BE,EAAS,IAAMF,EAAaA,EAG5BG,EAAI7L,GAAG8L,YAAYC,MAAM,CAAC,EAAGJ,IAAQK,QAAQ,IAC7CC,EAAIjM,GAAGkM,cAAcH,MAAM,CAACH,EAAQ,IAGpCO,EAAMnM,GACPC,OAAO,QACP2E,OAAO,OACPC,KAAK,KAAM,gBACXA,KAAK,QAAS8G,EAAQD,EAAcA,GACpC7G,KAAK,SAAU+G,EAASF,EAAaA,GACrC5G,MAAM,mBAAoB,WAC1BF,OAAO,KACPC,KAAK,YAAa,aAAe6G,EAAc,IAAMA,EAAa,KAGvES,EACKvH,OAAO,KACPC,KAAK,QAAS,QACduH,KACGpM,GACKqM,SAASJ,GACTK,UAAUX,GACVY,WAAW,KAIxBJ,EACKvH,OAAO,KACPC,KAAK,QAAS,QACdA,KAAK,YAAa,eAAiB+G,EAAS,KAC5CQ,KACGpM,GACKwM,WAAWX,GACXS,UAAUV,GACVW,WAAW,KAIxBvH,EAAK/D,SAAQ,SAAUL,GACnBA,EAAM6L,KAAQ,GAAE,IAAI7E,KAAKhH,EAAM6L,MAAM/D,WAAa,KAAK,IAAId,KAAKhH,EAAM6L,MAAM9D,YAC5E/H,EAAM0B,MAAQ1B,EAAM0B,KACpB1B,EAAM8L,MAAQ9L,EAAM8L,KACpB9L,EAAM+L,KAAO/L,EAAM+L,IACnB/L,EAAMgM,OAAShM,EAAMgM,KACzB,IAGA5H,EAAK6H,UAGLhB,EAAEiB,OACE9H,EAAKrE,KAAI,SAAUC,GACf,OAAOA,EAAM6L,IACjB,KAEJR,EAAEa,OAAO,CACL9M,GAAGwG,IAAIxB,GAAM,SAAUpE,GACnB,OAAOA,EAAM+L,GACjB,IACA3M,GAAG+M,IAAI/H,GAAM,SAAUpE,GACnB,OAAOA,EAAM8L,IACjB,MAIJP,EACKvH,OAAO,KACPC,KAAK,YAAa,eAAiB+G,EAAS,KAC5CQ,KACGpM,GACKwM,WAAWX,GACXmB,WACGnB,EAAEiB,SAASG,QAAO,SAAUR,EAAMzE,GAC9B,OAAOA,EAAM,IAAO,CACxB,MAGX5E,UAAU,QACVyB,KAAK,YAAa,eAClBA,KAAK,KAAM,GACXA,KAAK,IAAK,GACVC,MAAM,cAAe,OAG1BqH,EACKvH,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,IAAK8G,EAAQ,GAClB9G,KAAK,IAAK+G,EAASF,EAAgB,GACnC5G,MAAM,cAAe,UACrByB,KAAK,QAGV4F,EAAIvH,OAAO,KAAKwH,KAAKpM,GAAGqM,SAASJ,IAGjCE,EACKvH,OAAO,QACPC,KAAK,QAAS,gBACdA,KAAK,KAAM+G,EAAS,GACpB/G,KAAK,KAAM6G,EAAc,GACzB7G,KAAK,YAAa,eAClBC,MAAM,cAAe,UACrByB,KAAK,SAGV4F,EACK/I,UAAU,QACV4B,KAAKA,GACLC,QACAL,OAAO,QACPC,KAAK,KAAK,SAAUjE,GACjB,OAAOiL,EAAEjL,EAAM6L,KACnB,IACC5H,KAAK,KAAK,SAAUjE,GACjB,OAAOqL,EAAEzG,KAAKuH,IAAInM,EAAM0B,KAAM1B,EAAMgM,OACxC,IACC/H,KAAK,QAASgH,EAAEqB,aAChBrI,KAAK,UAAU,SAAUjE,GACtB,OAAOqL,EAAEzG,KAAKgB,IAAI5F,EAAM0B,KAAM1B,EAAMgM,QAAUX,EAAEzG,KAAKuH,IAAInM,EAAM0B,KAAM1B,EAAMgM,OAC/E,IACC/H,KAAK,QAAQ,SAAUjE,GACpB,OAAOA,EAAM0B,KAAO1B,EAAMgM,MAAQ,MAAQ,OAC9C,IAIJT,EACKvH,OAAO,QACPC,KAAK,QAAS,kBACdA,KAAK,IAAK8G,EAAQ,GAClB9G,KAAK,KAAM6G,EAAa,EAAI,IAC5B5G,MAAM,cAAe,UACrBA,MAAM,YAAa,QACnByB,KAAK,mBAGd,CApVI4G,CAAqB3B,EAAgB4B,YAGrCpG,SAASmC,eAAe,WAAWrE,MAAM0E,QAAU,OACnDxC,SAASmC,eAAe,eAAerE,MAAM0E,QAAU,OACvDxC,SAASmC,eAAe,iBAAiBrE,MAAM0E,QAAU,OAGzDxC,SAASmC,eAAe,kBAAkBrE,MAAM0E,QAAU,OAG1D,MAAM6D,EAA6BrG,SAASmC,eAAe,kBAG3D,GAFAkE,EAA2BnG,UAAY,GAEZ,IAAvBsD,EAAY8C,OAEZD,EAA2BnG,UAAY,kDACpC,CAEH,MAAMqG,EAAkBvG,SAASI,cAAc,MAE/CmG,EAAgBjG,UAAUC,IAAI,gBAG9B,MAAMiG,EAAWxG,SAASI,cAAc,MAExCoG,EAASlG,UAAUC,IAAI,eAIvB,MAAMkG,EAAczG,SAASI,cAAc,OAC3CqG,EAAY3I,MAAM0E,QAAU,OAC5BiE,EAAY3I,MAAM4I,WAAa,SAC/BD,EAAY3I,MAAM6I,eAAiB,SACnCF,EAAY3I,MAAMkH,QAAU,OAG5B,MAAM4B,EAAO5G,SAASI,cAAc,OACpCwG,EAAK9I,MAAM+I,YAAc,OAGzB,MAAM3M,EAAO8F,SAASI,cAAc,KACpClG,EAAK4D,MAAMgJ,SAAW,OACtB5M,EAAK4D,MAAMiJ,WAAa,uBACxB7M,EAAK4D,MAAMkJ,WAAa,OACxB9M,EAAK4D,MAAM+I,YAAc,MAKzBJ,EAAYnG,UAAUC,IAAI,iBAC1BqG,EAAKK,IAAMzD,EAAY,GAAG0D,MAC1BN,EAAKtG,UAAUC,IAAI,QACnBrG,EAAKiN,KAAO3D,EAAY,GAAG4D,QAC3BlN,EAAKmG,YAAcmD,EAAY,GAAG6D,YAClCnN,EAAKoG,UAAUC,IAAI,QACnBkG,EAAY3H,YAAY8H,GACxBH,EAAY3H,YAAY5E,GACxBsM,EAAS1H,YAAY2H,GAMrB,MAAM5L,EAAQmF,SAASI,cAAc,OAG/BkH,EAAc9D,EAAY,GAAG3I,MAAQ2J,EAAgB4B,WAAW,GAAG9K,KAGzET,EAAMwF,YAAc,IAAMmD,EAAY,GAAG3I,MACzCA,EAAMyF,UAAUC,IAAI,SAIhB+G,EAAc,EACdzM,EAAMiD,MAAMsE,MAAQ,MACbkF,GAAe,IACtBzM,EAAMiD,MAAMsE,MAAQ,SAGxBoE,EAAS1H,YAAYjE,GACrB0L,EAAgBzH,YAAY0H,GAM5B,MAAMe,EAAWvH,SAASI,cAAc,MACxCmH,EAASzJ,MAAMiJ,WAAa,uBAC5BQ,EAASzJ,MAAMkJ,WAAa,OAC5BO,EAASzJ,MAAM0E,QAAU,OACzB+E,EAASzJ,MAAM4I,WAAa,SAC5Ba,EAASzJ,MAAM6I,eAAiB,gBAChCY,EAASzJ,MAAMgJ,SAAW,OAC1BS,EAASzJ,MAAMkH,QAAU,OACzBuC,EAASzJ,MAAM0J,aAAe,OAC9BD,EAASzJ,MAAM2J,YAAc,OAI7BF,EAASjH,UAAUC,IAAI,aAEvB,IAAK,MAAMmH,KAAWvD,EAAa,CAC/B,MAAMwD,EAAW3H,SAASI,cAAc,MACxCuH,EAASrH,UAAUC,IAAI,aAEvB,MAAMqH,EAAQ5H,SAASI,cAAc,KACrCwH,EAAMT,KAAOO,EAAQG,IACrBD,EAAMvH,YAAcqH,EAAQE,MAC5BA,EAAMtH,UAAUC,IAAI,cAEpB,MAAMuH,EAAU9H,SAASI,cAAc,KACvC0H,EAAQzH,YAAcqH,EAAQnI,KAC9BuI,EAAQxH,UAAUC,IAAI,gBAEtB,MAAMkF,EAAOzF,SAASI,cAAc,KACpCqF,EAAKpF,YAAcqH,EAAQK,cAAczD,MAAM,EAAG,IAClDmB,EAAKnF,UAAUC,IAAI,aAEnBoH,EAAS7I,YAAY8I,GACrBD,EAAS7I,YAAYgJ,GACrBH,EAAS7I,YAAY2G,GAErB8B,EAASzI,YAAY6I,EAOzB,CAEAnB,EAAS1H,YAAYyI,GACrBhB,EAAgBzH,YAAY0H,GAG5BH,EAA2BvH,YAAYyH,EAC3C,CACJ,CC7JIyB,CAAW5E,EACf,G","sources":["webpack://trader_radar/./src/scripts/treemap.js","webpack://trader_radar/./src/scripts/ticker_tape.js","webpack://trader_radar/./src/scripts/time.js","webpack://trader_radar/./src/scripts/searchbar.js","webpack://trader_radar/./src/index.js","webpack://trader_radar/./src/scripts/title.js"],"sourcesContent":["const apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\nlet canvas = d3.select('#treemapcanvas');\n\n// here is the main entry function\nexport default async function mainTreemap() {\n  const indexSelector = document.getElementById(\"index\");\n  const sizeSelector = document.getElementById(\"size-by\");\n\n  const defaultIndexValue = \"sp500\";\n  const defaultSizeValue = \"marketCap\";\n\n  indexSelector.value = defaultIndexValue;\n  sizeSelector.value = defaultSizeValue;\n\n  const stockDataArray = await fetchStockData(defaultIndexValue);\n  const root = getStockTreeMapRoot(stockDataArray);\n\n  drawTreeMap(root, defaultSizeValue);\n\n  // this is for the select index dropdown\n  indexSelector.addEventListener(\"change\", async function () {\n    const indexValue = indexSelector.value;\n    const sizeValue = sizeSelector.value;\n    const stockDataArray = await fetchStockData(indexValue);\n    const root = getStockTreeMapRoot(stockDataArray);\n    drawStockTreeMap(root, sizeValue);\n  });\n\n  // this is for the select size-by dropdown\n  sizeSelector.addEventListener(\"change\", async function () {\n    const sizeValue = sizeSelector.value;\n    const indexValue = indexSelector.value;\n    const stockDataArray = await fetchStockData(indexValue);\n    const root = getStockTreeMapRoot(stockDataArray);\n    drawStockTreeMap(root, sizeValue);\n  });\n}\n\n\n// function to fetch stock data\nasync function fetchStockData(indexValue) {\n  const indexData = await fetch(`https://financialmodelingprep.com/api/v3/${indexValue}_constituent?apikey=${apiKey}`)\n    .then(response => response.json());\n  const symbols = indexData.map(stock => stock.symbol).join(',');\n  const quotesData = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbols}?apikey=${apiKey}`)\n    .then(response => response.json());\n  const stockDataMap = {};\n  indexData.forEach(stock => {\n    stockDataMap[stock.symbol] = {\n      name: stock.symbol,\n      sector: stock.sector,\n      fullName: stock.name,\n      subSector: stock.subSector,\n      marketCap: quotesData.find(quote => quote.symbol === stock.symbol).marketCap,\n      changesPercentage: quotesData.find(quote => quote.symbol === stock.symbol).changesPercentage,\n      volume: quotesData.find(quote => quote.symbol === stock.symbol).volume,\n      avgVolume: quotesData.find(quote => quote.symbol === stock.symbol).avgVolume,\n      sharesOutstanding: quotesData.find(quote => quote.symbol === stock.symbol).sharesOutstanding,\n      price: quotesData.find(quote => quote.symbol === stock.symbol).price,\n      changeValue: quotesData.find(quote => quote.symbol === stock.symbol).change,\n      dayLow: quotesData.find(quote => quote.symbol === stock.symbol).dayLow,\n      dayHigh: quotesData.find(quote => quote.symbol === stock.symbol).dayHigh,\n      yearHigh: quotesData.find(quote => quote.symbol === stock.symbol).yearHigh,\n      yearLow: quotesData.find(quote => quote.symbol === stock.symbol).yearLow,\n      priceAvg50: quotesData.find(quote => quote.symbol === stock.symbol).priceAvg50,\n      priceAvg200: quotesData.find(quote => quote.symbol === stock.symbol).priceAvg200,\n      open: quotesData.find(quote => quote.symbol === stock.symbol).open,\n      previousClose: quotesData.find(quote => quote.symbol === stock.symbol).previousClose,\n      eps: quotesData.find(quote => quote.symbol === stock.symbol).eps,\n      pe: quotesData.find(quote => quote.symbol === stock.symbol).pe\n    };\n  });\n  return Object.values(stockDataMap);\n}\n\n// function to get stock root for treemap\nfunction getStockTreeMapRoot(stockDataArray) {\n  const root = {\n    name: \"stock\",\n    children: []\n  };\n  const sectors = {};\n  stockDataArray.forEach(stock => {\n    const sector = stock.sector;\n    if (!sectors[sector]) {\n      sectors[sector] = {\n        name: sector,\n        children: []\n      };\n    }\n    sectors[sector].children.push(stock);\n  });\n  Object.values(sectors).forEach(sector => {\n    root.children.push(sector);\n  });\n  return root;\n}\n\n// function to draw the trees\nfunction drawStockTreeMap(root, defaultSizeValue) {\n  d3.selectAll('g').remove();\n  drawTreeMap(root, defaultSizeValue);\n}\n\n\n\n\n\n\n// ↑ this is the data api pull and format for the draw treemap\n//-------------------------------------------------------------------------------------------------------------\n// ↓ this is the draw treemap which creates the treemap for display\n\n\n\n\n\n\n\n\n//function to draw the treemap\nlet drawTreeMap = (stockData, size) => {\n\n  // sorts the hierarchy so that the largest marketcap stocks are at the top\n  let hierarchy = d3.hierarchy(stockData, (node) => {\n    return node['children'];\n  }).sum((node) => {\n    return node[size];\n  }).sort((node1, node2) => {\n    return node2['value'] - node1['value']; // this has to be set to value and not marketCap as the hierarcy fucntion is renaming it value\n  });\n  // .size is the size of our canvas in the scss file\n  let generateTreeMap = d3.treemap()\n    .tile(d3.treemapBinary)\n    .size([canvas.node().clientWidth, canvas.node().clientHeight])\n    .paddingOuter(7)\n    .paddingTop(43)\n    .paddingInner(2)\n    .round(true);\n\n  // this uses d3 to generate the treemap\n  generateTreeMap(hierarchy);\n\n  let stockTiles = hierarchy.leaves();\n\n  // create a new div for the details when mouse over\n  let detailsDiv = d3.select('body')\n    .append('div')\n    .attr('class', 'details')\n    .style('display', 'none');\n\n  // creates g elements inside the canvas. g elements are group tags. and sets the size of the element to an x and y axias. Click and mouseover events are defined here\n  let block = canvas.selectAll('g')\n    .data(stockTiles)\n    .enter()\n    .append('g')\n    .attr('transform', (stock) => {\n      return 'translate(' + stock['x0'] + ', ' + stock['y0'] + ')'\n    })\n    .each(function (stock) {\n      // Save the original transform of the group element. Used in the popup\n      d3.select(this).attr('data-original-transform', d3.select(this).attr('transform'));\n      d3.select(this).attr('data-name', stock['data']['name']);\n      d3.select(this).attr('data-fullName', stock['data']['fullName']);\n      d3.select(this).attr('data-marketCap', stock['data']['marketCap'].toLocaleString('en-US'));\n      d3.select(this).attr('data-price', stock['data']['price'].toFixed(2));\n      d3.select(this).attr('data-changeValue', stock['data']['changeValue'].toFixed(2));\n      d3.select(this).attr('data-changesPercentage', stock['data']['changesPercentage'].toFixed(2));\n      d3.select(this).attr('data-dayLow', stock['data']['dayLow'].toFixed(2));\n      d3.select(this).attr('data-dayHigh', stock['data']['dayHigh'].toFixed(2));\n      d3.select(this).attr('data-yearHigh', stock['data']['yearHigh'].toFixed(2));\n      d3.select(this).attr('data-yearLow', stock['data']['yearLow'].toFixed(2));\n      d3.select(this).attr('data-priceAvg50', stock['data']['priceAvg50'].toFixed(2));\n      d3.select(this).attr('data-priceAvg200', stock['data']['priceAvg200'].toFixed(2));\n      d3.select(this).attr('data-open', stock['data']['open'].toFixed(2));\n      d3.select(this).attr('data-previousClose', stock['data']['previousClose'].toFixed(2));\n      d3.select(this).attr('data-eps', stock['data']['eps'].toFixed(2));\n      d3.select(this).attr('data-pe', stock['data']['pe'].toFixed(2));\n      d3.select(this).attr('data-x0', stock['x0'] + 27); // use this to set the postion of the popup\n      d3.select(this).attr('data-y0', stock['y0'] + 20); // use this to set the postion of the popup\n      d3.select(this).attr('data-x0', stock['x1'] + 40); // use this to set the postion of the popup\n      d3.select(this).attr('data-y0', stock['y1']); // use this to set the postion of the popup\n\n      // Calculate the scaling factor based on the area of the tile. This is used in the click/zoom\n      let area = (stock['x1'] - stock['x0']) * (stock['y1'] - stock['y0']);\n      let scale = Math.sqrt(160000 / area);\n      d3.select(this).attr('data-scale', scale);\n    })\n    // hover over function that displays stock info\n    .on('mouseover', function (stock) {\n      detailsDiv.html(\n        `<strong>${d3.select(this).attr('data-fullName')}</strong>\n        <br>\n        <br>\n        Ticker: ${d3.select(this).attr('data-name')}\n        <br>\n        Market Cap: ${d3.select(this).attr('data-marketCap')}\n        <br>\n        Price: ${d3.select(this).attr('data-price')}\n        <br>\n        Change: ${d3.select(this).attr('data-changeValue')}\n        <br>\n        Change %: ${d3.select(this).attr('data-changesPercentage')}%\n        <br>\n        Low: ${d3.select(this).attr('data-dayLow')}\n        <br>\n        High: ${d3.select(this).attr('data-dayHigh')}\n        <br>\n        Open: ${d3.select(this).attr('data-open')}\n        <br>\n        Previous Close: ${d3.select(this).attr('data-previousClose')}\n        <br>\n        Yr High: ${d3.select(this).attr('data-yearHigh')}\n        <br>\n        Yr Low: ${d3.select(this).attr('data-yearLow')}\n        <br>\n        50 Day Avg: ${d3.select(this).attr('data-priceAvg50')}\n        <br>\n        200 Day Avg: ${d3.select(this).attr('data-priceAvg200')}\n        <br>\n        EPS: ${d3.select(this).attr('data-eps')}\n        <br>\n        PE: ${d3.select(this).attr('data-pe')}\n        `\n      );\n      // This is where you can style the popup on mouseover\n      detailsDiv.style('display', 'block')\n        .style('padding', '10px')\n        .style('background-color', '#E2FFFF')\n        .style('border', '1px solid #ccc')\n        .style('border-radius', '5px')\n        .style(\"font-size\", \"16px\")\n        .style(\"font-family\", \"'Roboto Slab', serif\")\n        .style(\"font-weight\", \"bold\")\n        .style('box-shadow', '0px 0px 5px rgba(0, 0, 0, 0.1)')\n        .style('left', d3.select(this).attr('data-x0') + 'px')\n        .style('top', d3.select(this).attr('data-y0') + 'px');\n    })\n    .on('mouseout', function () {\n      detailsDiv.style('display', 'none');\n      d3.select(this).select('.hover-text').remove();\n    })\n    // click function that pulls a stock to the middle of the screen\n    .on('click', function (stock) {\n      let originalTransform = d3.select(this).attr('data-original-transform');\n\n      let scale = d3.select(this).attr('data-scale');\n\n      // Move the selected block to the end of the canvas (in terms of rendering order). This puts it in the absolute front.\n      let node = d3.select(this).node();\n      node.parentNode.appendChild(node);\n\n      // If the tile has not been selected yet, color it and zoom in\n      if (d3.select(this).classed('selected') === false) {\n        // Color the selected tile\n        d3.select(this)\n          .select('rect')\n          .transition()\n          .duration(750)\n          .style('fill', 'orange');\n\n        // Scale the selected block by a factor based on the area of the tile\n        d3.select(this)\n          .each(function () {\n            // Store the original fill color of the rect\n            const rect = d3.select(this).select('rect');\n            rect.attr('data-original-fill', rect.style('fill'));\n          })\n          .transition()\n          .duration(750)\n          .attr('transform', d3.zoomIdentity\n            .translate(550, 350) // (x, y) on the whole canvas or screen\n            .scale(scale));\n\n        d3.select(this).classed('selected', true);\n      }\n      // If the tile has already been selected, un-color it and zoom out\n      else {\n        // Un-color the tile\n        d3.select(this)\n          .select('rect')\n          .transition()\n          .duration(750)\n          .style('fill', function () {\n            // Retrieve the original fill color of the rect\n            return d3.select(this).attr('data-original-fill');\n          });\n        // Reset the tile to its original size and position\n        d3.select(this)\n          .transition()\n          .duration(750)\n          .attr('transform', originalTransform);\n\n        d3.select(this).classed('selected', false);\n      }\n    });\n\n\n  // all g elements now have a class called tile, and color has been set to each category. These will turn into market sectors\n  block.append('rect')\n    .attr('class', 'tile')\n    // this is where we can set the fill color by daily percentage change\n    .attr(\"fill\", (stock) => {\n      return stock['data']['changesPercentage'] < -3 ? '#f63538' :\n        stock['data']['changesPercentage'] < -2 ? '#bf4045' :\n          stock['data']['changesPercentage'] < -1 ? '#f77c80' :\n            stock['data']['changesPercentage'] > -1 && stock['data']['changesPercentage'] < 0 ? '#f77c80' :\n              stock['data']['changesPercentage'] < 1 ? '#42bd7f' :\n                stock['data']['changesPercentage'] < 2 ? '#2f9e4f' :\n                  stock['data']['changesPercentage'] < 3 ? '#35764e' :\n                    '#35764e';\n    }).attr(\"data-name\", (stock) => {\n      return stock['data']['name'];\n    }).attr('data-sector', (stock) => {\n      return stock['data']['sector'];\n    }).attr(`data-${size}`, (stock) => {\n      return stock[\"data\"][size];\n    }).attr('width', (stock) => {\n      return stock['x1'] - stock['x0'];\n    }).attr('height', (stock) => {\n      return stock['y1'] - stock['y0'];\n    });\n\n  // this resets the text so that we can re-render the titles. This must be abover all block.append text or it will break\n  canvas.selectAll(\"text\").remove();\n\n  // title feature for each sector\n  canvas\n    .selectAll(\"titles\")\n    .data(hierarchy.children)\n    .enter()\n    .append(\"text\")\n    .attr('class', 'title')\n    .attr(\"x\", (sector) => (sector.x0 + 7))\n    .attr(\"y\", (sector) => (sector.y0 + 30))\n    .text(function (sector) { return sector.data.name })\n    .attr(\"font-size\", \"19px\")\n    .style(\"fill\", \"white\")\n\n  // sets the stock ticker attributes for each tile\n  block.append('text')\n    .text((stock) => {\n      return stock['data']['name'];\n    })\n    .attr('class', 'label')\n    .attr('x', (stock) => (stock['x1'] - stock['x0']) / 3)\n    .attr('y', (stock) => ((stock['y1'] - stock['y0']) / 2))\n    .style('fill', 'white')\n    .attr('font-size', (stock) => `${Math.min((stock['x1'] - stock['x0']) / 10, (stock['y1'] - stock['y0']) / 10)}px`);\n\n  // sets the daily percentage change for each tile under the stock ticker. y is being offset so it dosen't layer on top of the stock ticker\n  block.append('text')\n    .text((stock) => {\n      return `${stock['data']['changesPercentage'].toFixed(2)}%`;\n    })\n    .attr('class', 'label')\n    .attr('x', (stock) => (stock['x1'] - stock['x0']) / 3)\n    .attr('y', (stock) => (((stock['y1'] - stock['y0']) / 2) + ((stock['y1'] - stock['y0']) / 12.5)))\n    .style('fill', 'white')\n    .attr('font-size', (stock) => `${Math.min((stock['x1'] - stock['x0']) / 10, (stock['y1'] - stock['y0']) / 10)}px`);\n\n  // sets the company logo for each stock tile. Can't get around 404 because this is not a fetch.\n  block.append('image')\n    .attr('xlink:href', (stock) => `https://financialmodelingprep.com/image-stock/${stock['data']['name']}.png`)\n    .attr('class', 'label')\n    .attr('x', (stock) => (stock['x1'] - stock['x0']) / 3)\n    .attr('y', (stock) => (((stock['y1'] - stock['y0']) / 2) + ((stock['y1'] - stock['y0']) / 12.5)))\n    .attr('width', (stock) => (stock['x1'] - stock['x0']) / 3)\n    .attr('height', (stock) => (stock['y1'] - stock['y0']) / 3);\n\n}\n","const apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\n\n// here is the main entry function\nexport default async function mainTicker() {\n    const indexSelector = document.getElementById(\"index\");\n    const defaultIndexValue = \"sp500\";\n    indexSelector.value = defaultIndexValue;\n    updateStockTicker(defaultIndexValue);\n\n    indexSelector.addEventListener(\"change\", async function () {\n        const indexValue = indexSelector.value;\n        updateStockTicker(indexValue);\n    });\n}\n\n// function to fetch stock data\nasync function fetchStockData(indexValue) {\n    const indexData = await fetch(`https://financialmodelingprep.com/api/v3/${indexValue}_constituent?apikey=${apiKey}`)\n        .then(response => response.json());\n    const symbols = indexData.map(stock => stock.symbol).join(',');\n    const quotesData = await fetch(`https://financialmodelingprep.com/api/v3/quote/${symbols}?apikey=${apiKey}`)\n        .then(response => response.json());\n\n    // Combine the index and quotes data to get all the stocks and their current prices\n    const stocksData = indexData.map(stock => {\n        const quoteData = quotesData.find(quote => quote.symbol === stock.symbol);\n        return {\n            symbol: stock.symbol,\n            changesPercentage: quoteData ? quoteData.changesPercentage : null,\n            price: quoteData ? quoteData.price : null\n        };\n    });\n\n    // Sort the array alphabetically by symbol\n    stocksData.sort((a, b) => a.symbol.localeCompare(b.symbol));\n\n    return stocksData;\n}\n\n// function to update the stock ticker\nasync function updateStockTicker(indexValue) {\n    const stocksData = await fetchStockData(indexValue);\n    const ticker = document.querySelector('#ticker');\n\n    // Clear the ticker\n    ticker.innerHTML = '';\n\n    // Add a <p> element for each stock\n    stocksData.forEach(stock => {\n        const p = document.createElement('p');\n        p.textContent = `${stock.symbol}: ${stock.price ? stock.price.toFixed(2) : 'N/A'}`; // display symbol and price with 2 decimal places\n\n        // Set the color based on the change percentage\n        if (stock.changesPercentage < 0) {\n            p.classList.add('negative');\n        } else if (stock.changesPercentage >= 0) {\n            p.classList.add('positive');\n        }\n\n        ticker.appendChild(p);\n    });\n\n    // Scroll the ticker to the left\n    setInterval(() => {\n        const ticker = document.querySelector('#ticker');\n        ticker.scrollLeft += 2; // adjust scroll\n    }, 100); // adjust scroll interval\n}\n","export default function updateTime() {\n    let options = {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZone: 'America/New_York',\n    };\n\n    let dt = new Date();\n    let dateTimeString = dt.toLocaleString('en-US', options);\n    dateTimeString = dateTimeString.replace(/([A-Z]+) Standard Time$/, '$1');\n\n    // Calculate time left until the market opens or closes\n    let openTime = new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate(), 13, 30, 0)); // Market opens at 9:30 AM EST (which is 1:30 PM UTC)\n    let closeTime = new Date(Date.UTC(dt.getFullYear(), dt.getMonth(), dt.getDate(), 20, 0, 0)); // Market closes at 4:00 PM EST (which is 8:00 PM UTC)\n    let timeDiff = openTime - dt;\n    let timeLeft = '';\n\n    if (timeDiff > 0) { // Market is not open yet\n        timeLeft = Math.floor(timeDiff / 1000 / 60 / 60) + ' hr ' + Math.floor((timeDiff / 1000 / 60) % 60) + ' min until open';\n    } else if (dt < closeTime) { // Market is open\n        timeDiff = closeTime - dt;\n        timeLeft = Math.floor(timeDiff / 1000 / 60 / 60) + ' hr ' + Math.floor((timeDiff / 1000 / 60) % 60) + ' min until close';\n    } else { // Market is closed\n        timeLeft = 'Market is closed';\n    }\n\n    let nyTime = new Date().toLocaleString(\"en-US\", {timeZone: \"America/New_York\"});\n    let nyHour = new Date(nyTime).getHours();\n\n    if (nyHour >= 9 && nyHour < 16) {\n        // Market is open - set text color to green\n        dateTimeString += ' EST  |  ' + timeLeft;\n        document.getElementById(\"datetime\").style.color = \"green\";\n    } else {\n        // Market is closed - set text color to red\n        dateTimeString += ' EST  |  ' + timeLeft;\n        document.getElementById(\"datetime\").style.color = \"red\";\n    }\n\n    document.getElementById(\"datetime\").innerHTML = dateTimeString;\n}\n","const apiKey = \"8660568d82eaea759bb0ec8e463033d2\";\n// const form = document.querySelector('form');\nconst input = document.querySelector('#input');\nconst clearButton = document.querySelector('#clear-button');\n\n// Add a click event listener to the clear button\nclearButton.addEventListener('click', function () {\n    input.value = ''; // Clear the input value\n    // clear out the search\n    document.getElementById(\"search-results\").style.display = \"none\";\n    // redisplay the treemap\n    document.getElementById(\"filters\").style.display = \"flex\";\n    document.getElementById(\"description\").style.display = \"flex\";\n    document.getElementById(\"treemapcanvas\").style.display = \"flex\";\n});\n\nexport default async function mainSearch(searchHit) {\n    searchHit.preventDefault(); // this is needed to prevent unwanted search\n\n    // get search query\n    const searchQuery = document.getElementById(\"input\").value;\n\n    // perform search and get company data\n    const companyData = await performSearch(searchQuery);\n\n    const news = await getStockNews(searchQuery);\n    const limitedNews = news.slice(0, 5);\n\n\n    // fetch chart data check to see if there is already a chart if so clear then redisplay\n    const chartElement = document.getElementById(\"candle-chart\")\n    const historicalPrice = await getHistoricalPrice(searchQuery);\n    if (chartElement) {\n        chartElement.remove();\n    }\n    drawCandlestickChart(historicalPrice.historical)\n\n    // clear out other elements on page\n    document.getElementById(\"filters\").style.display = \"none\";\n    document.getElementById(\"description\").style.display = \"none\";\n    document.getElementById(\"treemapcanvas\").style.display = \"none\";\n\n    // redisplay search\n    document.getElementById(\"search-results\").style.display = \"flex\";\n\n    // update search company data container with search results\n    const searchCompanyDataContainer = document.getElementById(\"search-results\");\n    searchCompanyDataContainer.innerHTML = \"\";\n\n    if (companyData.length === 0) {\n        // display message if no company data found\n        searchCompanyDataContainer.innerHTML = \"<p class='no-results'>No results found.</p>\";\n    } else {\n        // display company data\n        const companyDataList = document.createElement(\"ul\");\n\n        companyDataList.classList.add(\"results-list\");\n\n        // Inside the news\n        const listItem = document.createElement(\"li\");\n\n        listItem.classList.add(\"result-item\");\n\n\n        // create logo and name element and style the div container\n        const logoAndName = document.createElement(\"div\");\n        logoAndName.style.display = \"flex\";\n        logoAndName.style.alignItems = \"center\";\n        logoAndName.style.justifyContent = \"center\";\n        logoAndName.style.padding = \"20px\";\n\n        // stule the company image\n        const logo = document.createElement(\"img\");\n        logo.style.marginRight = \"30px\"\n\n        // style the company name\n        const name = document.createElement(\"a\");\n        name.style.fontSize = \"20px\";\n        name.style.fontFamily = \"'Roboto Slab', serif\";\n        name.style.fontWeight = \"bold\"\n        name.style.marginRight = \"2px\";\n\n\n\n        // adding and appending html elements around the page for company profile\n        logoAndName.classList.add(\"logo-and-name\");\n        logo.src = companyData[0].image;\n        logo.classList.add(\"logo\");\n        name.href = companyData[0].website;\n        name.textContent = companyData[0].companyName;\n        name.classList.add(\"name\");\n        logoAndName.appendChild(logo);\n        logoAndName.appendChild(name);\n        listItem.appendChild(logoAndName);\n\n\n\n\n        // create price and style\n        const price = document.createElement(\"div\");\n\n        // get the price change from yesterday\n        const priceChange = companyData[0].price - historicalPrice.historical[0].open;\n\n        // adding and appending the price html elements on the page\n        price.textContent = \"$\" + companyData[0].price;\n        price.classList.add(\"price\");\n\n\n        // add the up or down class based on price change\n        if (priceChange < 0) {\n            price.style.color = \"red\";\n        } else if (priceChange >= 0) {\n            price.style.color = \"green\"\n        }\n\n        listItem.appendChild(price);\n        companyDataList.appendChild(listItem);\n\n\n\n\n        // add news and style\n        const newsList = document.createElement(\"ul\");\n        newsList.style.fontFamily = \"'Roboto Slab', serif\";\n        newsList.style.fontWeight = \"bold\"\n        newsList.style.display = \"flex\";\n        newsList.style.alignItems = \"center\";\n        newsList.style.justifyContent = \"space-between\";\n        newsList.style.fontSize = \"15px\";\n        newsList.style.padding = \"20px\";\n        newsList.style.paddingRight = \"30px\";\n        newsList.style.paddingLeft = \"30px\"\n\n\n        // how the news list items are mapped and added to the HTML of the page\n        newsList.classList.add(\"news-list\");\n\n        for (const article of limitedNews) {\n            const newsItem = document.createElement(\"li\");\n            newsItem.classList.add(\"news-item\");\n\n            const title = document.createElement(\"a\");\n            title.href = article.url;\n            title.textContent = article.title;\n            title.classList.add(\"news-title\");\n\n            const summary = document.createElement(\"p\");\n            summary.textContent = article.text;\n            summary.classList.add(\"news-summary\");\n\n            const date = document.createElement(\"p\");\n            date.textContent = article.publishedDate.slice(0, 10);\n            date.classList.add(\"news-date\");\n\n            newsItem.appendChild(title);\n            newsItem.appendChild(summary);\n            newsItem.appendChild(date);\n\n            newsList.appendChild(newsItem);\n\n\n            // news item styles\n            // title.classList.style.marginBottom = \"10px\"\n            // newsList.style.marginRight = \"10px\"\n\n        }\n\n        listItem.appendChild(newsList);\n        companyDataList.appendChild(listItem);\n\n\n        searchCompanyDataContainer.appendChild(companyDataList);\n    }\n}\n\n// ------------------------------------------------------------------------------------------------------\n\n// Pull the company profile data\nasync function performSearch(searchTerm) {\n\n    const apiUrl = `https://financialmodelingprep.com/api/v3/profile/${searchTerm}?apikey=${apiKey}`;\n\n    return await fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            const searchResults = JSON.stringify(data);\n            const searchResultsObj = JSON.parse(searchResults);\n            return searchResultsObj;\n        })\n        .catch(error => {\n            console.error(error);\n            return error;\n        });\n}\n\n// Pull the company news data\nasync function getStockNews(tickers) {\n    const apiUrl = `https://financialmodelingprep.com/api/v3/stock_news?tickers=${tickers}&apikey=${apiKey}`;\n    return await fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            const searchResults = JSON.stringify(data);\n            const searchResultsObj = JSON.parse(searchResults);\n            return searchResultsObj;\n        })\n        .catch(error => {\n            console.error(error);\n            return error;\n        });;\n}\n\n// get historical price for chart. Timeseries is for how many days we want to return\nasync function getHistoricalPrice(tickers) {\n    const apiUrl = `https://financialmodelingprep.com/api/v3/historical-price-full/${tickers}?timeseries=180&apikey=${apiKey}`;\n    return await fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => {\n            const searchResults = JSON.stringify(data);\n            const searchResultsObj = JSON.parse(searchResults);\n            return searchResultsObj;\n        })\n        .catch(error => {\n            console.error(error);\n            return error;\n        });;\n}\n\n// ------------------------------------------------------------------------------------------------------\n\n// draw the chart\nfunction drawCandlestickChart(data) {\n    // set the dimensions and margins of the graph\n    const margin = { top: 65, right: 20, bottom: 90, left: 100 };\n    const width = 1500 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n\n    // set the ranges\n    const x = d3.scaleBand().range([0, width]).padding(0.2);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    // create the svg element\n    const svg = d3\n        .select(\"body\")\n        .append(\"svg\")\n        .attr(\"id\", \"candle-chart\") // Add the id attribute\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .style(\"background-color\", \"#f5f5f5\")\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // add horizontal gridlines\n    svg\n        .append(\"g\")\n        .attr(\"class\", \"grid\")\n        .call(\n            d3\n                .axisLeft(y)\n                .tickSize(-width)\n                .tickFormat(\"\")\n        );\n\n    // add vertical gridlines\n    svg\n        .append(\"g\")\n        .attr(\"class\", \"grid\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n            d3\n                .axisBottom(x)\n                .tickSize(-height)\n                .tickFormat(\"\")\n        );\n\n    // format the data\n    data.forEach(function (stock) {\n        stock.date = `${new Date(stock.date).getMonth() + 1}/${new Date(stock.date).getDate()}`;\n        stock.open = +stock.open;\n        stock.high = +stock.high;\n        stock.low = +stock.low;\n        stock.close = +stock.close;\n    });\n\n    // reverse the order of the data array so it charts oldest on x0 and newest on x1\n    data.reverse();\n\n    // set the domains\n    x.domain(\n        data.map(function (stock) {\n            return stock.date;\n        })\n    );\n    y.domain([\n        d3.min(data, function (stock) {\n            return stock.low;\n        }),\n        d3.max(data, function (stock) {\n            return stock.high;\n        }),\n    ]);\n\n    // draw the custom x axis with labels for every 30 days\n    svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n            d3\n                .axisBottom(x)\n                .tickValues(\n                    x.domain().filter(function (date, day) {\n                        return day % 30 === 0;\n                    })\n                )\n        )\n        .selectAll(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"x\", -9)\n        .attr(\"y\", 0)\n        .style(\"text-anchor\", \"end\");\n\n    // draw the x-axis label\n    svg\n        .append(\"text\")\n        .attr(\"class\", \"x-axis-label\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height + margin.bottom / 2)\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Date\");\n\n    // draw the y axis\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // draw the y-axis label\n    svg\n        .append(\"text\")\n        .attr(\"class\", \"y-axis-label\")\n        .attr(\"x\", -height / 2)\n        .attr(\"y\", -margin.left / 2)\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Price\");\n\n    // draw the candlesticks\n    svg\n        .selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", function (stock) {\n            return x(stock.date);\n        })\n        .attr(\"y\", function (stock) {\n            return y(Math.max(stock.open, stock.close));\n        })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", function (stock) {\n            return y(Math.min(stock.open, stock.close)) - y(Math.max(stock.open, stock.close));\n        })\n        .attr(\"fill\", function (stock) {\n            return stock.open > stock.close ? \"red\" : \"green\";\n        });\n\n\n    // add chart title\n    svg\n        .append(\"text\")\n        .attr(\"class\", \"chart-subtitle\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", -margin.top / 2 + 25)\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .text(\"Day Stock Prices\");\n\n\n}\n","import mainTreemap from \"./scripts/treemap\";\nmainTreemap()\n\nimport mainTicker from \"./scripts/ticker_tape\";\nmainTicker()\n\nimport updateTime from \"./scripts/time\";\nupdateTime()\n\n// Update the time every second\nsetInterval(updateTime, 1000);\n\nimport updateTitle from \"./scripts/title\";\nupdateTitle()\n\nimport mainSearch from \"./scripts/searchbar\";\ndocument.getElementById(\"search\").addEventListener(\"click\", function (event) {\n    mainSearch(event);\n});\n","export default async function updateTitle() {\n\n    const indexSelector = document.getElementById(\"index\");\n    const sizeSelector = document.getElementById(\"size-by\");\n    const titleElement = document.getElementById('description');\n\n    const defaultIndexValue = \"sp500\";\n    const defaultSizeValue = \"marketCap\";\n\n    indexSelector.value = defaultIndexValue;\n    sizeSelector.value = defaultSizeValue;\n\n    // this is for the select index dropdown\n    function updateTitleFromIndex() {\n        const indexValue = indexSelector.value;\n        const sizeValue = sizeSelector.value;\n        return indexValue === \"sp500\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents market cap.\" :\n            indexValue === \"sp500\" && sizeValue === \"volume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents volume.\" :\n                indexValue === \"sp500\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents average volume.\" :\n                    indexValue === \"sp500\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents shares outstanding.\" :\n                        indexValue === \"dowjones\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents market cap.\" :\n                            indexValue === \"dowjones\" && sizeValue === \"volume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents volume.\" :\n                                indexValue === \"dowjones\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents average volume.\" :\n                                    indexValue === \"dowjones\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents shares outstanding.\" :\n                                        indexValue === \"nasdaq\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents market cap.\" :\n                                            indexValue === \"nasdaq\" && sizeValue === \"volume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents volume.\" :\n                                                indexValue === \"nasdaq\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents average volume.\" :\n                                                    indexValue === \"nasdaq\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents shares outstanding.\" : titleElement.innerText = `${indexValue} index stocks categorized by industries. Size represents ${sizeValue}.`;\n    }\n\n    // this is for the select size-by dropdown\n    function updateTitleFromSize() {\n        const sizeValue = sizeSelector.value;\n        const indexValue = indexSelector.value;\n        return indexValue === \"sp500\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents market cap.\" :\n            indexValue === \"sp500\" && sizeValue === \"volume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents volume.\" :\n                indexValue === \"sp500\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents average volume.\" :\n                    indexValue === \"sp500\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"S&P 500 index stocks categorized by industries. Size represents shares outstanding.\" :\n                        indexValue === \"dowjones\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents market cap.\" :\n                            indexValue === \"dowjones\" && sizeValue === \"volume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents volume.\" :\n                                indexValue === \"dowjones\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents average volume.\" :\n                                    indexValue === \"dowjones\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"Dow Jones index stocks categorized by industries. Size represents shares outstanding.\" :\n                                        indexValue === \"nasdaq\" && sizeValue === \"marketCap\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents market cap.\" :\n                                            indexValue === \"nasdaq\" && sizeValue === \"volume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents volume.\" :\n                                                indexValue === \"nasdaq\" && sizeValue === \"avgVolume\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents average volume.\" :\n                                                    indexValue === \"nasdaq\" && sizeValue === \"sharesOutstanding\" ? titleElement.innerText = \"NASDAQ index stocks categorized by industries. Size represents shares outstanding.\" : titleElement.innerText = `${indexValue} index stocks categorized by industries. Size represents ${sizeValue}.`;\n\n    }\n\n    // call the event listener functions to set the default title text\n    updateTitleFromIndex();\n    updateTitleFromSize();\n\n    indexSelector.addEventListener(\"change\", updateTitleFromIndex);\n    sizeSelector.addEventListener(\"change\", updateTitleFromSize);\n}\n"],"names":["apiKey","canvas","d3","select","async","fetchStockData","indexValue","indexData","fetch","then","response","json","symbols","map","stock","symbol","join","quotesData","stockDataMap","forEach","name","sector","fullName","subSector","marketCap","find","quote","changesPercentage","volume","avgVolume","sharesOutstanding","price","changeValue","change","dayLow","dayHigh","yearHigh","yearLow","priceAvg50","priceAvg200","open","previousClose","eps","pe","Object","values","getStockTreeMapRoot","stockDataArray","root","children","sectors","push","drawStockTreeMap","defaultSizeValue","selectAll","remove","drawTreeMap","stockData","size","hierarchy","node","sum","sort","node1","node2","treemap","tile","treemapBinary","clientWidth","clientHeight","paddingOuter","paddingTop","paddingInner","round","generateTreeMap","stockTiles","leaves","detailsDiv","append","attr","style","block","data","enter","each","this","toLocaleString","toFixed","area","scale","Math","sqrt","on","html","originalTransform","parentNode","appendChild","classed","transition","duration","rect","zoomIdentity","translate","x0","y0","text","min","updateStockTicker","stocksData","quoteData","a","b","localeCompare","ticker","document","querySelector","innerHTML","p","createElement","textContent","classList","add","setInterval","scrollLeft","updateTime","dt","Date","dateTimeString","weekday","month","day","year","hour","minute","second","timeZone","replace","openTime","UTC","getFullYear","getMonth","getDate","closeTime","timeDiff","timeLeft","floor","nyTime","nyHour","getHours","getElementById","color","input","addEventListener","value","display","indexSelector","sizeSelector","defaultIndexValue","sizeValue","mainTreemap","mainTicker","titleElement","updateTitleFromIndex","innerText","updateTitleFromSize","updateTitle","event","searchHit","preventDefault","searchQuery","companyData","searchTerm","apiUrl","searchResults","JSON","stringify","parse","catch","error","console","performSearch","limitedNews","tickers","getStockNews","slice","chartElement","historicalPrice","getHistoricalPrice","margin","width","height","x","scaleBand","range","padding","y","scaleLinear","svg","call","axisLeft","tickSize","tickFormat","axisBottom","date","high","low","close","reverse","domain","max","tickValues","filter","bandwidth","drawCandlestickChart","historical","searchCompanyDataContainer","length","companyDataList","listItem","logoAndName","alignItems","justifyContent","logo","marginRight","fontSize","fontFamily","fontWeight","src","image","href","website","companyName","priceChange","newsList","paddingRight","paddingLeft","article","newsItem","title","url","summary","publishedDate","mainSearch"],"sourceRoot":""}